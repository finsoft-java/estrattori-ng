var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { Injector, Directive, Inject, ElementRef, ViewChildren, QueryList, Input, EventEmitter } from '@angular/core';
import { NgForm } from '@angular/forms';
var NbpFormAutoScrollDirective = (function () {
    function NbpFormAutoScrollDirective(elementRef, inj) {
        this.elementRef = elementRef;
        this.inj = inj;
    }
    NbpFormAutoScrollDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.form = this.inj.get(NgForm, null);
        this.form.ngSubmit.subscribe(function (submit) {
            // console.log('submit');
            _this.scrollTo(null);
        });
        // console.log('Form detected ' + this.form);
        if (this.submitEvent) {
            this.submitEvent.subscribe(function () {
                _this.scrollTo(null);
            });
        }
    };
    NbpFormAutoScrollDirective.prototype.scrollTo = function (field) {
        try {
            console.dir(this.inputs);
            // tslint:disable-next-line:max-line-length
            var elements = document.querySelectorAll('nbp-input-text.ng-invalid, nbp-combo.ng-invalid, nbp-combo-multi.ng-invalid, nbp-checkbox.ng-invalid, .alert');
            if (elements.length === 0) {
                // console.log('not found');
                return;
            }
            console.dir(elements);
            // console.log('found, scrolling ' + elements[0].name);
            console.dir(elements[0]);
            elements[0].scrollIntoView({ behavior: 'smooth' });
        }
        finally {
            // console.log('scroll done');
        }
    };
    return NbpFormAutoScrollDirective;
}());
__decorate([
    Input(),
    __metadata("design:type", EventEmitter)
], NbpFormAutoScrollDirective.prototype, "submitEvent", void 0);
__decorate([
    ViewChildren('input'),
    __metadata("design:type", QueryList)
], NbpFormAutoScrollDirective.prototype, "inputs", void 0);
NbpFormAutoScrollDirective = __decorate([
    Directive({
        selector: 'form[autoscroll]',
    }),
    __param(0, Inject(ElementRef)),
    __metadata("design:paramtypes", [ElementRef,
        Injector])
], NbpFormAutoScrollDirective);
export { NbpFormAutoScrollDirective };
