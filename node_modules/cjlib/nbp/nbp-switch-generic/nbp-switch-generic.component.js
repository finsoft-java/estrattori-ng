var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, ViewChildren, Output, EventEmitter } from '@angular/core';
var NbpSwitchGenericComponent = (function () {
    function NbpSwitchGenericComponent() {
        /**
         * Funzione da invocare al click sullo switch
         */
        this.clickFn = new EventEmitter();
        /**
         * Parametro usato per attivare e disattivare il focus al tab.
         */
        this.focusOn = [false, false];
        /**
         * (Opzionale) Paramentro che indica l'ordine di spostamento da un campo all'altro attraverso il tab.
         */
        this.tabindex = 0;
        this.onSelect = function (choice, target) {
            this.focusOn = [false, false];
            this.selected = choice;
            if (this.clickFn) {
                this.clickFn.emit();
            }
        };
        this.onSelectBinary = function () {
            if (this.selected != true) {
                this.selected = true;
            }
            else {
                this.selected = false;
            }
            if (this.clickFn) {
                this.clickFn.emit();
            }
            ;
        };
    }
    NbpSwitchGenericComponent.prototype._tabFocusOn = function (choice) {
        this.focusOn[choice] = true;
    };
    NbpSwitchGenericComponent.prototype._tabFocusOff = function (choice) {
        this.focusOn[choice] = false;
    };
    NbpSwitchGenericComponent.prototype._shiftTabFocusOn = function (choice) {
        this.focusOn[choice] = true;
    };
    NbpSwitchGenericComponent.prototype._shiftTabFocusOff = function (choice) {
        this.focusOn[choice] = false;
    };
    NbpSwitchGenericComponent.prototype._focusOn = function (choice) {
        return this.focusOn[choice];
    };
    NbpSwitchGenericComponent.prototype._focusOnFn = function (choice) {
        this.focusOn[choice] = true;
    };
    NbpSwitchGenericComponent.prototype.ngOnInit = function () {
        if (!this.selected) {
            this.selected = 0;
        }
    };
    NbpSwitchGenericComponent.prototype.ngAfterViewInit = function () {
        if (this.firstFocus) {
            this.focusOn[0] = true;
            this.elementRef._results[0].nativeElement.focus();
        }
    };
    return NbpSwitchGenericComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", Array)
], NbpSwitchGenericComponent.prototype, "choices", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NbpSwitchGenericComponent.prototype, "type", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NbpSwitchGenericComponent.prototype, "clickFn", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NbpSwitchGenericComponent.prototype, "disabled", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NbpSwitchGenericComponent.prototype, "selected", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NbpSwitchGenericComponent.prototype, "textUp", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NbpSwitchGenericComponent.prototype, "firstFocus", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NbpSwitchGenericComponent.prototype, "focusOn", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NbpSwitchGenericComponent.prototype, "tabindex", void 0);
__decorate([
    ViewChildren('autoFocusSwitch'),
    __metadata("design:type", Object)
], NbpSwitchGenericComponent.prototype, "elementRef", void 0);
NbpSwitchGenericComponent = __decorate([
    Component({
        selector: 'nbp-switch-generic',
        template: "<div class=\"btn-group\" [ngClass]=\"{'switch-container': type != 'binary'}\"><label *ngIf=\"type == 'binary'\" class=\"switch-binary\" [ngClass]=\"{'switch-binary-true': selected}\" (click)=\"onSelectBinary()\" style=\"font-size: 1em !important\"><div class=\"slider-box\"></div><span class=\"switch-label-icon-on\"><span class=\"binary-label\">ON</span> </span><span class=\"switch-label-icon-off\"><span class=\"binary-label\">OFF</span></span></label><div *ngIf=\"type == 'iconTextSmall'\"><button *ngFor=\"let choice of choices; let i=index;\" [ngClass]=\"{'primary': selected === i, 'default': selected != i, 'right': i==1, 'focusTabSwitchOn': _focusOn(i)}\" class=\"btn switch-button-icontext-small\" [disabled]=\"disabled\" (click)=\"onSelect(i)\" (focusout)=\"_tabFocusOff(i)\" (keydown.tab)=\"_tabFocusOff(i)\" (keyup.tab)=\"_tabFocusOn(i)\" (keydown.shift.tab)=\"_shiftTabFocusOff(i)\" (keyup.shift.tab)=\"_shiftTabFocusOn(i)\" [tabindex]=\"tabindex\" #autoFocusSwitch><span class=\"switch-label-icon\">{{choice.label}}</span> <span></span> <span class=\"icon switch-icon {{choice.icon}}\"></span></button></div><div *ngIf=\"type == 'iconText'\"><button *ngFor=\"let choice of choices; let i=index;\" [ngClass]=\"{'primary': selected === i, 'default': selected != i, 'focusTabSwitchOn': _focusOn(i)}\" class=\"btn switch-button-icontext\" [disabled]=\"disabled\" (click)=\"onSelect(i)\" [ngStyle]=\"{'padding-top': (textUp ? '5px' : '1em')}\" (focusout)=\"_tabFocusOff(i)\" (keydown.tab)=\"_tabFocusOff(i)\" (keyup.tab)=\"_tabFocusOn(i)\" (keydown.shift.tab)=\"_shiftTabFocusOff(i)\" (keyup.shift.tab)=\"_shiftTabFocusOn(i)\" [tabindex]=\"tabindex\" #autoFocusSwitch><span class=\"switch-label-icon\" [ngStyle]=\"{'padding-right': (!textUp ? '0.625em' : 0)}\">{{choice.label}}</span> <span *ngIf=\"textUp\"></span> <span class=\"icon switch-icon {{choice.icon}}\" [ngClass]=\"{'switch-icon-text-up': textUp}\"></span></button></div><div *ngIf=\"type == 'text' || type == 'textSmall'\"><button *ngFor=\"let choice of choices; let i=index;\" [ngClass]=\"{'small' : type === 'textSmall', 'primary': selected === i, 'default': selected != i, 'right': i==1, 'focusTabSwitchOn': _focusOn(i)}\" class=\"btn switch-button-text\" [disabled]=\"disabled\" (click)=\"onSelect(i)\" (focusout)=\"_tabFocusOff(i)\" (keydown.tab)=\"_tabFocusOff(i)\" (keyup.tab)=\"_tabFocusOn(i)\" (keydown.shift.tab)=\"_shiftTabFocusOff(i)\" (keyup.shift.tab)=\"_shiftTabFocusOn(i)\" [tabindex]=\"tabindex\" #autoFocusSwitch><span class=\"switch-label-icon\">{{choice.label}}</span></button></div><div *ngIf=\"type === 'icon'\"><button *ngFor=\"let choice of choices; let i=index;\" [ngClass]=\"{'primary': selected === i, 'default': selected != i, 'right': i==1, 'focusTabSwitchOn': focusOn[i]}\" class=\"btn switch-button-icon\" [disabled]=\"disabled\" (click)=\"onSelect(i)\" (focusout)=\"_tabFocusOff(i)\" (focus)=\"_focusOnFn(i)\" (keydown.tab)=\"_tabFocusOff(i)\" (keyup.tab)=\"_tabFocusOn(i)\" (keydown.shift.tab)=\"_shiftTabFocusOff(i)\" (keyup.shift.tab)=\"_shiftTabFocusOn(i)\" [tabindex]=\"tabindex\" #autoFocusSwitch><span class=\"icon switch-icon {{choice.icon}}\"></span></button></div></div>",styles: [".switch-container{background-color:#258900;border-radius:0;box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.focusTabSwitchOn{box-shadow:0 0 .05em .23em rgba(37,137,0,.6)!important}.switch-button-icontext{position:relative;font-weight:700;font-size:.75em;margin:0!important;padding-top:1em;padding-bottom:1em;line-height:1;outline:0!important;min-width:6.875em;height:4.167em;z-index:0}.switch-button-icontext:active{box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-button-icontext .switch-label{margin-right:.625em}.switch-button-icontext .switch-label-icon{padding-bottom:.313em;display:table-cell!important;vertical-align:middle}.switch-button-icontext .switch-icon{font-size:2.084em!important;display:table-cell!important}.switch-button-icontext .switch-icon-text-up{display:block!important}.switch-button-icontext.btn{border-radius:0!important}.switch-button-icontext .btn[disabled]:hover{cursor:default}.primary{border:none}.primary.right{box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)!important}.switch-button-icontext.primary{color:#fff;background-color:#258900;border-color:#258900;box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-button-icontext.default{color:#6f6f6f;background-color:#fff;border-color:#ccc}.switch-button[disabled]{box-shadow:none}.switch-button-icontext.default[disabled]:hover{background-color:#fff!important;border-color:#ccc!important}.switch-button-icontext.primary[disabled]:hover{background-color:#258900!important;border-color:#258900!important}.switch-button-icontext-small{padding-top:.313em;position:relative;font-weight:700;font-size:.75em;margin:0!important;padding-bottom:1em;line-height:1;outline:0!important;min-width:6.25em;height:4.167em;z-index:0}.switch-button-icontext-small:active{box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-button-icontext-small .switch-label{margin-right:.625em}.switch-button-icontext-small .switch-label-icon{padding-bottom:.313em;display:inline-block!important;vertical-align:middle}.switch-button-icontext-small .switch-icon{font-size:2.084em!important;display:block!important}.switch-button-icontext-small.btn{border-radius:0!important}.switch-button-icontext-small .btn[disabled]:hover{cursor:default}.switch-button-icontext-small.primary{color:#fff;background-color:#258900;border-color:#258900;box-shadow:inset 0 .125em .188em rgba(0,0,0,.2)}.switch-button-icontext-small.default{color:#6f6f6f;background-color:#fff;border-color:#ccc}.switch-button[disabled]{box-shadow:none}.switch-button-icontext-small.default[disabled]:hover{background-color:#fff!important;border-color:#ccc!important}.switch-button-icontext-small.primary[disabled]:hover{background-color:#258900!important;border-color:#258900!important}.switch-button-text{text-align:center;position:relative;font-weight:700;font-size:.75em;margin:0!important;padding-top:1em;padding-bottom:1em;line-height:1;outline:0!important;min-width:9.584em;height:4.167em;z-index:0}.switch-button-text:active{box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-button-text.btn{border-radius:0!important}.switch-button-text .btn[disabled]:hover{cursor:default}.switch-button-text.primary{color:#fff;background-color:#258900;border-color:#258900;box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-button-text.default{color:#6f6f6f;background-color:#fff;border-color:#ccc}.switch-button-text[disabled]{box-shadow:none}.switch-button-text.default[disabled]:hover{background-color:#fff!important;border-color:#ccc!important}.switch-button-text.primary[disabled]:hover{background-color:#258900!important;border-color:#258900!important}.switch-button-text.small{min-width:6.25em}.switch-button-icon{position:relative;font-weight:700;font-size:.75em;margin:0!important;padding-top:1em;padding-bottom:1em;line-height:1;outline:0!important;min-width:6.25em;height:4.167em;z-index:0}.switch-button-icon:active{box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-button-icon .switch-icon{font-size:2.084em!important}.switch-button-icon.btn{border-radius:0!important}.switch-button-icon .btn[disabled]:hover{cursor:default}.switch-button-icon.primary{color:#fff;background-color:#258900;border-color:#258900;box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-button-icon.default{color:#6f6f6f;background-color:#fff;border-color:#ccc}.switch-button[disabled]{box-shadow:none}.switch-button-icon.default[disabled]:hover{background-color:#fff!important;border-color:#ccc!important}.switch-button-icon.primary[disabled]:hover{background-color:#258900!important;border-color:#258900!important}.switch-binary{position:relative;display:inline-block;width:6.25em;height:3.125em;cursor:pointer;background-color:#ccc;-webkit-transition:0s;transition:0s}.switch-binary .switch-label-icon-on{font-weight:700;color:#fff;width:3.125em;display:table-cell;line-height:3em;box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-binary .switch-label-icon-off{font-weight:700;color:#6f6f6f;width:3.125em;display:table-cell;line-height:3em;box-shadow:inset 0 .125em .188em 0 rgba(0,0,0,.2)}.switch-binary .binary-label{font-size:.75em}.slider-box{position:absolute;content:\"\";cursor:pointer;height:3.125em;width:3.125em;left:0;bottom:0;background-color:#fff;-webkit-transition:0s;transition:0s;border:.063em solid #ccc}.switch-binary-true{background-color:#258900}.switch-binary-true .slider-box{-webkit-transform:translateX(3.125em);-ms-transform:translateX(3.125em);transform:translateX(3.125em)}:host-context(.contrasto-on) .switch-button-icon.default,:host-context(.contrasto-on) .switch-button-icontext-small.default,:host-context(.contrasto-on) .switch-button-icontext.default,:host-context(.contrasto-on) .switch-button-text.default{color:#000;background-color:#fff;border-color:#000}:host-context(.contrasto-on) .switch-binary,:host-context(.contrasto-on) .switch-button-icon.primary,:host-context(.contrasto-on) .switch-button-icontext-small.primary,:host-context(.contrasto-on) .switch-button-icontext.primary,:host-context(.contrasto-on) .switch-button-text.primary{color:#fff;background-color:#000;border-color:#fff}:host-context(.contrasto-on) .slider-box{background-color:#fff;border-color:#000}:host-context(.contrasto-on) .switch-binary .switch-label-icon-on{color:#fff}:host-context(.contrasto-on) .switch-binary .switch-label-icon-off{color:#fff}:host-context(.contrasto-on) .switch-binary-true{background-color:#000} /*# sourceMappingURL=nbp-switch-generic.component.css.map */ "]
    }),
    __metadata("design:paramtypes", [])
], NbpSwitchGenericComponent);
export { NbpSwitchGenericComponent };
