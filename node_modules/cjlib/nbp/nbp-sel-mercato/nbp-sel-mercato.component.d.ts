import { EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
/**
 * Componente per la selezione/deselezione del mercato. Funzionamento analogo ad una checkbox
 */
export declare class NbpSelMercatoComponent implements ControlValueAccessor {
    private checkValRef;
    static idCounter: Number;
    controlID: String;
    checked: Boolean;
    /**
     * * valore in input della label del bottone
     */
    key: string;
    /**
     * valore emesso dal componente sull'evento onChange quando il componente è checked
     * @type {boolean}
     */
    trueValue: boolean;
    /**
     * valore emesso dal componente sull'evento onChange quando il componente è unchecked
     * @type {boolean}
     */
    falseValue: boolean;
    /**
     * classe css che definisce l'icona
     */
    iconIn: string;
    /**
     * evento al cambio di stato del componente. Trasporta i valori definiti in trueValue e falseValue (true e false di default)
     * @type {EventEmitter<any>}
     */
    change: EventEmitter<any>;
    constructor();
    propagateChange: (_: any) => void;
    onTouchedCallback: () => {};
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onChange(event: any): void;
    ngOnInit(): void;
    getIconClass(): string;
}
