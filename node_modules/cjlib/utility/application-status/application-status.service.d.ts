import { IApplicationAlertDefinition } from './../../module.config';
import { IClientError } from './../global-error-handler/global-error-handler.interfaces';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/partition';
export interface IApplicationStatus {
    /**
    * Permette di notificare la presenza di un nuovo errore
    */
    notifyError(error: IClientError): void;
    /**
    * Permette di ricevere lo stream degli errori grezzi
    * sia globalError sia ApplicationAlert
    */
    getErrorRawStream(): Observable<IClientError>;
    /**
     * Permette di ricevere lo stream degli errori globali
     */
    getGlobalErrorStream(): Observable<IClientError>;
    /**
     * Permette di ricevere lo stream gli alert applicativi
     * ES. errori gestiti dal BE da visualizzare sul top delle varie pagine
     */
    getApplicationAlertStream(): Observable<IClientError>;
}
export declare class ApplicationStatusService implements IApplicationStatus {
    private alertDefinition;
    private _errorRaw$;
    private _globalError$;
    private _applicationAlert$;
    private appAlertDefinitionFn;
    constructor(alertDefinition: IApplicationAlertDefinition);
    /**
     * Permette di aggiungere un errore
     */
    notifyError(error: IClientError): void;
    /**
     * Permette di ricevere lo stream degli errori grezzi
     * sia globalError sia ApplicationAlert
     */
    getErrorRawStream(): Observable<IClientError>;
    /**
     * Permette di ricevere gli errori globali
     */
    getGlobalErrorStream(): Observable<IClientError>;
    /**
     * Permette di ricevere gli alert applicativi da visualizzare sul
     * top delle varie pagine
     */
    getApplicationAlertStream(): Observable<IClientError>;
    /**
     * Definizione dei criteri da usare per distinguere tra errore globale da visualizzare
     * tramite modale di errore e Alert applicativo (errore restituito dal BE es. incongruenza
     * input inseriti)
     * @param {IClientError} error erroreGlobale
     *
     */
    private applicationAlertDefinition(error);
}
