import { NbpTooltipComponent } from './../../nbp/nbp-tooltip/nbp-tooltip.component';
import { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';
export declare class NbpSpinnerGenericComponent implements OnInit {
    tooltipLeft: NbpTooltipComponent;
    tooltipRight: NbpTooltipComponent;
    labelSpinner: string;
    minValue: number;
    maxValue: number;
    spinnerValue: any;
    stepValue: number;
    /**
   * Booleano che indica se mostrare icona e tooltip nell'intestazione del componente
   */
    showHelpTooltip: boolean;
    /**
     * (Opzionale) Enum che definisce il la posizione del tooltip rispetto all’oggetto al quale è ancorato:
     * “Top” | “Right” | “Bottom” | “Left” | “Top-Left” | “Top-Right” | “Bottom-Left” | “Bottom-Right”
     * Default: “Top”
     */
    tooltipHelpPosition: string;
    /**
     * Strategia di apertura tooltip, 'click' o 'hover':
     * click -> comportamento popover con apertura e chiusura su click (più pulsante x all'interno del tooltip)
     * hover -> comportamento tooltip classico apertura su hover , chiusura sulla perdita dell'hover
     * Valore di default: hover
    */
    tooltipHelpVisibility: string;
    /**
     * Stringa che definisce il testo del tooltip
     */
    tooltipHelpText: string;
    /**
     * Proprietà che definisce la grandezza del tooltip, tramite l'enum NbpSize
     * valore di default: NbpSize.SM
     */
    tooltipHelpSize: any;
    /**
     * Stringa che definisce la classe dell'icona da mostrare
     */
    tooltipHelpIcon: string;
    /**
     * Stringa che definisce il testo del tooltip
     */
    tooltipLeftText: string;
    /**
     * Proprietà che definisce la grandezza del tooltip, tramite l'enum NbpSize
     * valore di default: NbpSize.SM
     */
    tooltipLeftSize: any;
    /**
     * Stringa che definisce il testo del tooltip
     */
    tooltipRightText: string;
    /**
     * Proprietà che definisce la grandezza del tooltip, tramite l'enum NbpSize
     * valore di default: NbpSize.SM
     */
    tooltipRightSize: any;
    required: boolean;
    disabled: boolean;
    runIE: boolean;
    toggleValidationMessage: boolean;
    errorMessage: string;
    constructor();
    _onSubtractClick(num: number): void;
    _onAddClick(num: number): void;
    checkSpinnerValue(): void;
    ngOnInit(): void;
    detectIE(): boolean;
}
