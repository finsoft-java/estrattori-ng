var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component } from '@angular/core';
import { NbpSize } from './../nbp-commons/nbp-commons.enums';
import { NbpModalDialogService } from './nbp-modal-dialog.service';
var NbpModalDialogComponent = (function () {
    function NbpModalDialogComponent(modalService) {
        var _this = this;
        this.modalService = modalService;
        this._show = false;
        this._sizes = NbpSize;
        this.dataSettingSubscription = modalService.getDataSettingtream().subscribe(function (data) {
            _this._title = data.title;
            _this._text = data.text;
            _this._buttons = data.buttons ? data.buttons : null;
            _this._onClick = data.onClickFn;
        });
        this.actionSubscription = modalService.getVisibilityActionStream().subscribe(function (show) {
            console.log("DemoModalDialogComponent getVisibilityActionStream: " + show);
            _this._show = show;
        });
    }
    NbpModalDialogComponent.prototype.ngOnInit = function () {
    };
    NbpModalDialogComponent.prototype.ngOnDestroy = function () {
        if (this.dataSettingSubscription) {
            this.dataSettingSubscription.unsubscribe();
        }
        if (this.actionSubscription) {
            this.actionSubscription.unsubscribe();
        }
    };
    return NbpModalDialogComponent;
}());
NbpModalDialogComponent = __decorate([
    Component({
        selector: 'nbp-modal-dialog',
        template: "<nbp-modal *ngIf=\"modalService.getDataSettingtream() | async\" [nbpTitle]=\"_title\" [nbpButtons]=\"_buttons\" (nbpOnButtonClicked)=\"_onClick($event)\" [nbpOpened]=\"_show\" [nbpSize]=\"_sizes.SM\"><span class=\"contenitore-test\">{{_text}}</span></nbp-modal>",
    }),
    __metadata("design:paramtypes", [NbpModalDialogService])
], NbpModalDialogComponent);
export { NbpModalDialogComponent };
