import { NbpComboComponent } from '../nbp-combo/nbp-combo.component';
import { ChangeDetectorRef, Injector, ElementRef } from '@angular/core';
import { NbpFormatterService } from '../../utility/nbp-formatter.service';
import { ValidatorArray, AsyncValidatorArray } from '../nbp-commons/nbp-validator';
import { NbpFormContainerComponent } from '../nbp-form-container/nbp-form-container.component';
import { NbpCheckboxComponent } from '../nbp-checkbox/nbp-checkbox.component';
/**
 * Provider Expression that allows nbp-combo-multi to register as a ControlValueAccessor.
 * This allows it to support [(ngModel)].
 * @docs-private
 */
export declare const NBP_COMBO_MULTI_CONTROL_VALUE_ACCESSOR: any;
export declare const NBP_INPUT_MULTI_ELEMENT_BASE: any;
export declare class NbpComboMultiComponent<T> extends NbpComboComponent<T> {
    checkbox: NbpCheckboxComponent;
    _nbpSelectedData: Array<T>;
    _nbpBindKeyField: boolean;
    nbpBindKeyField: boolean;
    constructor(validatori: ValidatorArray, asyncValidatori: AsyncValidatorArray, parentFormContainer: NbpFormContainerComponent, formatterService: NbpFormatterService, element: ElementRef, inj: Injector, cd: ChangeDetectorRef);
    private _canMoveOrSearch();
    _searchByKey(event: any): void;
    _moveNext(event: Event): void;
    _onSelectByKeyboard(event: any): void;
    _movePrev(event: Event): void;
    _isOptionPreselected(item: any): boolean;
    private findFullElementFromDSData(selectedElement);
    _getViewValue(valueArray: T[]): any;
    _formatViewValueLabel(numberOfSelectedItems: number): string;
    _getModelValue(item: any): T[];
    _getUpdatedValueAfterSelectionChange(item: any): T[];
    _manageDropdownState(event: any): void;
    _onInputClick(event: Event): void;
    _showCheckbox(item: any): boolean;
    private _updateViewAndModelValues(item);
    private _sendSelectionEvents(item);
    _onSelectEvent(item: any, value?: boolean): void;
    _getViewModelElement(item: any): any;
    _getSelectedElement(item: any): any;
    isOptionInSelectedArray(item: T): boolean;
    _isOptionSelected(item: T): boolean;
}
