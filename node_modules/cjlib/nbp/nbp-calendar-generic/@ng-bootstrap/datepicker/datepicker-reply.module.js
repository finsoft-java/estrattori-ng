var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RplCalendar } from './datepicker';
import { NgbDatepickerRoutingView } from './datepicker-routing-view';
import { NgbDatepickerNavigation } from './datepicker-navigation';
import { NgbInputDatepicker } from './datepicker-input';
import { FormsModule } from '@angular/forms';
import { NgbDatepickerDayView } from './datepicker-day-view';
import { NgbDatepickerReplyYearsView } from './datepicker-reply-years-view';
import { NgbDatepickerReplyMonthView } from './datepicker-reply-month-view';
import { NgbDatepickerI18n, NgbDatepickerI18nDefault } from './datepicker-i18n';
import { NgbCalendar, NgbCalendarGregorian } from './ngb-calendar';
import { NgbDateParserFormatter, NgbDateISOParserFormatter } from './ngb-date-parser-formatter';
import { NgbDatepickerNavigationSelect } from './datepicker-navigation-select';
import { NgbDatepickerConfig } from './datepicker-config';
export { RplCalendar } from './datepicker';
export { NgbInputDatepicker } from './datepicker-input';
export { NgbCalendar } from './ngb-calendar';
export { NgbCalendarIslamicCivil } from './hijri/ngb-calendar-islamic-civil';
export { NgbDatepickerRoutingView } from './datepicker-routing-view';
export { NgbDatepickerDayView } from './datepicker-day-view';
export { NgbDatepickerReplyYearsView } from './datepicker-reply-years-view';
export { NgbDatepickerReplyMonthView } from './datepicker-reply-month-view';
export { NgbDatepickerNavigation } from './datepicker-navigation';
export { NgbDatepickerNavigationSelect } from './datepicker-navigation-select';
export { NgbDatepickerConfig } from './datepicker-config';
export { NgbDatepickerI18n } from './datepicker-i18n';
export { NgbDateParserFormatter } from './ngb-date-parser-formatter';
var RplCalendarModule = RplCalendarModule_1 = (function () {
    function RplCalendarModule() {
    }
    RplCalendarModule.forRoot = function () {
        return {
            ngModule: RplCalendarModule_1,
            providers: [
                { provide: NgbCalendar, useClass: NgbCalendarGregorian },
                { provide: NgbDatepickerI18n, useClass: NgbDatepickerI18nDefault },
                { provide: NgbDateParserFormatter, useClass: NgbDateISOParserFormatter }, NgbDatepickerConfig
            ]
        };
    };
    return RplCalendarModule;
}());
RplCalendarModule = RplCalendarModule_1 = __decorate([
    NgModule({
        declarations: [
            RplCalendar,
            NgbDatepickerRoutingView,
            NgbDatepickerNavigation,
            NgbDatepickerNavigationSelect,
            NgbDatepickerDayView,
            NgbDatepickerReplyMonthView,
            NgbDatepickerReplyYearsView,
            NgbInputDatepicker
        ],
        exports: [RplCalendar, NgbInputDatepicker],
        imports: [CommonModule, FormsModule],
        entryComponents: [RplCalendar]
    })
], RplCalendarModule);
export { RplCalendarModule };
var RplCalendarModule_1;
