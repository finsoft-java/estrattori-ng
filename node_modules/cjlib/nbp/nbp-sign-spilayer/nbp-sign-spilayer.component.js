var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
import { NbpSpilayerService } from '../nbp-sign/nbp-spilayer.service';
var LowLevelSpilayerEmulator = (function () {
    function LowLevelSpilayerEmulator() {
    }
    LowLevelSpilayerEmulator.prototype.IsISPADContrattiEnabled = function () {
        console.log('LowLevelSpilayerEmulator.isISPADContrattiEnabled()');
        return true;
    };
    LowLevelSpilayerEmulator.prototype.PrintContract = function (xml) {
        console.log('LowLevelSpilayerEmulator.printContract()');
        return true;
    };
    LowLevelSpilayerEmulator.prototype.SetLeanBankingEndPoint = function (endPoint, port) {
        console.log('LowLevelSpilayerEmulator.setLeanBankingEndPoint()');
    };
    LowLevelSpilayerEmulator.prototype.PrintDatiXml = function (xml, sincrono, descrizione) {
        console.log('LowLevelSpilayerEmulator.printDatiXml()');
        return true;
    };
    LowLevelSpilayerEmulator.prototype.OpenBrowser = function (xml) {
        console.log('LowLevelSpilayerEmulator.openBrowser()');
        return true;
    };
    LowLevelSpilayerEmulator.prototype.IsPadPresent = function () {
        console.log('LowLevelSpilayerEmulator.isPadPresent()');
        return true;
    };
    LowLevelSpilayerEmulator.prototype.IsTabletPresent = function () {
        console.log('LowLevelSpilayerEmulator.isTabletPresent()');
        return true;
    };
    LowLevelSpilayerEmulator.prototype.CloseBrowser = function (caption, message, type) {
        console.log('LowLevelSpilayerEmulator.closeBrowser()');
    };
    LowLevelSpilayerEmulator.prototype.ShowISPADContratti = function () {
        console.log('LowLevelSpilayerEmulator.showISPADContratti()');
    };
    return LowLevelSpilayerEmulator;
}());
export { LowLevelSpilayerEmulator };
var NbpSignSpilayerComponent = (function () {
    function NbpSignSpilayerComponent(spilayerService) {
        this.spilayerService = spilayerService;
        /**
         * Identificativo del tag Object contenente lo SpiLayerMulticanale.
         * Da utilizzare per l'invocazione dei metodi di firma del ActiveX.
         */
        this.nbpObjectId = 'spilayerMulticanale';
        // TODO per test
        // this.nbpObjectId = 'spilayerMulticanale'; 
    }
    NbpSignSpilayerComponent.prototype.ngOnInit = function () {
        if (!this.nbpObjectId) {
            console.warn("NbpSignSpilayerComponent - attributo nbpObjectId mancante");
        }
    };
    NbpSignSpilayerComponent.prototype.ngAfterViewInit = function () {
        if (this.nbpObjectId) {
            // used to debug on chrome, must be disabled for release
            //     let emulator = new LowLevelSpilayerEmulator(); 
            //     (window as any)[this.nbpObjectId] = emulator; 
            this.spilayerService.updateActiveXReference(this.nbpObjectId);
        }
    };
    NbpSignSpilayerComponent.prototype.ngOnDestroy = function () {
        this.spilayerService.updateActiveXReference(null);
    };
    return NbpSignSpilayerComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpSignSpilayerComponent.prototype, "nbpObjectId", void 0);
NbpSignSpilayerComponent = __decorate([
    Component({selector: 'nbp-sign-spilayer',
        template: "<object [id]=\"nbpObjectId\" classid=\"clsid:D74DF0CB-94F9-4F14-9A98-B8552608A76F\" height=\"0px\" width=\"0px\"></object>"
    }),
    __metadata("design:paramtypes", [NbpSpilayerService])
], NbpSignSpilayerComponent);
export { NbpSignSpilayerComponent };
