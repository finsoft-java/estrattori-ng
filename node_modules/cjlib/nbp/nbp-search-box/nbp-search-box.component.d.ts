import { DoCheck, IterableDiffers, EventEmitter } from '@angular/core';
import { NbpStyle } from '../nbp-commons/nbp-commons.enums';
/**
 * Componente per la ricerca testuale. E' in grado di mostrare suggerimenti per le ricerche
 */
export declare class NbpSearchBoxComponent implements DoCheck {
    /**
     * Array[any] risultati suggestion
     */
    nbpResults: Array<any>;
    /**
    * nome dei campi personalizzabili dell'oggetto nbpResults. Default: "group"
    */
    nbpGroup: string;
    /**
    * nome dei campi personalizzabili dell'oggetto nbpResults. Default: "label"
    */
    nbpLabel: string;
    /**
    * nome dei campi personalizzabili dell'oggetto nbpResults. Default: "subtitle"
    */
    nbpSubtitle: string;
    /**
     * nome dei campi personalizzabili dell'oggetto nbpResults. Default: "description"
     */
    nbpDescription: string;
    /**
     * nome dei campi personalizzabili dell'oggetto nbpResults. Default: "type"
     */
    nbpType: string;
    /**
     * numero di altri risultati da mostrare. Default: 0 (numero non mostrato).
     * Valore speciale "-1": non mostra la scritta
     */
    nbpOtherResultsNumber: Number;
    /**
     * testo bottone ricerca
     */
    nbpSearchButtonText: string;
    /**
     * testo placeholder casella ricerca
     * @type {string}
     */
    nbpPlaceholder: string;
    /**
     * evento che innesca la ricerca dei suggerimenti
     */
    change: EventEmitter<any>;
    /**
    * evento che innesca la ricerca dei risultati
    */
    search: EventEmitter<any>;
    /**
     * evento sollevato al click sul testo "mostra altri risultati"
     */
    showMoreResults: EventEmitter<any>;
    /**
     * Object che conterrà i raggruppamenti dei risultato
     */
    groups: any;
    /**
     * lista dei raggruppamenti
     */
    groupsList: string[];
    /**
     * variabile che gestisce la visulizzazione dei risultati
     */
    showResults: boolean;
    /**
     * variabile interna per vedere il cambiamento dei risultati in ingresso
     */
    differ: any;
    /**
     * variabile per vedere se l'imput della ricerca dei risultati è cambiato
     */
    eventPass: string;
    /**
     * variabile in output per la ricerca
     */
    searchText: string;
    primary: NbpStyle;
    /**
     *
     * @param differs  inizializza l' iteratore che serve controlla l'input in ingresso nbpResults
     */
    constructor(differs: IterableDiffers);
    /**
     * funzione che raggruppa i suggerimenti
     */
    private formatResults;
    ngOnInit(): void;
    /**
     * funzione che determina se vi è stato un cambiamento in ingresso
     */
    ngDoCheck(): void;
    /**
     *
     * @param elem input selezionato dai risultati
     * funzione che imposta la varibile searchText in base al risultato in cui ho cliccato
     */
    selectSearch(elem: any): void;
    /**
     * Funzione che rimuove i suggerimenti
     */
    clearResults(): void;
    /**
     *
     * funzione che lancia l'evento per la ricerca dei suggerimenti
     */
    changeStr($event: any): void;
    /**
     * funzione che lancia l'evento di ricerca
     */
    sendSearch(): void;
    /**
     * funzione che lancia evento di click su "mostra più risultati
     */
    showMoreClick(): void;
}
