var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { FileUploader } from 'ng2-file-upload';
/** intero autogenerato usato per id unici */
var nextId = 0;
var NbpUploadFileComponent = (function () {
    function NbpUploadFileComponent() {
        /**
         * Evento per passare all'esterno la lista dei file.
         */
        this.nbpUploadFile = new EventEmitter();
        /**
         * Evento per associare una funziona esterna all'icona della lista dei file. Ritorna l'oggetto del file selezionato.
         */
        this.nbpEventIcon = new EventEmitter();
        /**
         * Tipo di caricamento dei file. Può assumere due valori:
         * 'single': permette di selezionare un solo file;
         * 'multiple': permette di selezionare più file;
         */
        this.typeUpload = 'multiple';
        this.uploader = new FileUploader({});
        this.hasBaseDropZoneOver = false;
        this.hasAnotherDropZoneOver = false;
        this.files = [];
        this.fileOverBox = false;
    }
    NbpUploadFileComponent.prototype.fileOverBase = function (e) {
        this.hasBaseDropZoneOver = e;
    };
    NbpUploadFileComponent.prototype.fileOverAnother = function (e) {
        this.hasAnotherDropZoneOver = e;
    };
    NbpUploadFileComponent.prototype.changeListener = function ($event) {
        if (this.uploader.queue.length > 0 && this.files.length < this.uploader.options.queueLimit) {
            this.files = [];
            for (var i = 0; i < this.uploader.queue.length; i++) {
                this.readThisDrop(this.uploader.queue[i]);
            }
            this.nbpUploadFile.emit(this.files);
        }
    };
    // readThis(inputValue: any): void {
    //     var file: File = inputValue.files[0];
    //     var myReader: FileReader = new FileReader();
    //     myReader.onload = (e) => {
    //         this.propagateChange(myReader.result);
    //     }
    //     myReader.readAsDataURL(file);
    //     this.files.push(file);
    // }
    NbpUploadFileComponent.prototype.readThisDrop = function (inputDrop) {
        var file = inputDrop.some;
        this.files.push(file);
    };
    NbpUploadFileComponent.prototype.iconFn = function (index) {
        this.nbpEventIcon.emit(this.files[index]);
    };
    NbpUploadFileComponent.prototype.ngOnInit = function () {
        if (this.typeUpload && this.typeUpload === 'multiple') {
            var arrayAllowedType = this.setAllowedFile();
            if (arrayAllowedType.length > 0) {
                this.uploader.setOptions({ allowedMimeType: arrayAllowedType, queueLimit: 10000000000 });
            }
        }
        else if (this.typeUpload && this.typeUpload === 'single') {
            var arrayAllowedType = this.setAllowedFile();
            if (arrayAllowedType.length > 0) {
                this.uploader.setOptions({ allowedMimeType: arrayAllowedType, queueLimit: 1 });
            }
        }
    };
    NbpUploadFileComponent.prototype.setAllowedFile = function () {
        var arrayResult = [];
        if (!!this.typeFile) {
            var arrayType = this.typeFile.split(',');
            if (arrayType.length > 0) {
                for (var i = 0; i < arrayType.length; i++) {
                    arrayResult.push(arrayType[i]);
                }
            }
        }
        return arrayResult;
    };
    NbpUploadFileComponent.prototype.fileDropFn = function (e) {
        this.fileOverBox = false;
        if (!this.uploader.options.queueLimit) {
            this.uploader.options.queueLimit = 100000000000;
        }
        if (this.uploader.queue.length > 0 && this.files.length < this.uploader.options.queueLimit) {
            this.files = [];
            for (var i = 0; i < this.uploader.queue.length; i++) {
                this.readThisDrop(this.uploader.queue[i]);
            }
            this.nbpUploadFile.emit(this.files);
        }
    };
    NbpUploadFileComponent.prototype.removeFile = function (indice) {
        this.files.splice(indice, 1);
        this.nbpUploadFile.emit(this.files);
    };
    return NbpUploadFileComponent;
}());
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], NbpUploadFileComponent.prototype, "nbpUploadFile", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], NbpUploadFileComponent.prototype, "nbpEventIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpUploadFileComponent.prototype, "typeUpload", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpUploadFileComponent.prototype, "typeFile", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpUploadFileComponent.prototype, "labelTitleDoc", void 0);
NbpUploadFileComponent = __decorate([
    Component({
        selector: 'nbp-upload-file',template: "<div class=\"container-upload-file\"><label style=\"font-size:1.125em !important; font-weight: normal;\">{{labelTitleDoc}}</label><br><li class=\"panel-box\"><div ng2FileDrop class=\"upload-file\" (fileOver)=\"fileOverBase($event)\" (dragover)=\"fileOverBox = true;\" *ngIf=\"uploader.queue.length == 0\"><div class=\"container-label-trascina\"><span class=\"label-trascina\">Trascina qui<br>oppure</span></div><div class=\"container-icon-aggiungi\" *ngIf=\"typeUpload === 'multiple'\"><div class=\"icomoon-Documenti_37 icon-aggiungi\" (click)=\"fileInputMultiple.click()\"></div></div><div class=\"container-icon-aggiungi\" *ngIf=\"typeUpload === 'single'\"><div class=\"icomoon-Documenti_37 icon-aggiungi\" (click)=\"fileInput.click()\"></div></div><div><span *ngIf=\"typeUpload === 'multiple'\" class=\"label-allega\" (click)=\"fileInputMultiple.click()\">ALLEGA I TUOI FILE</span> <span *ngIf=\"typeUpload === 'single'\" class=\"label-allega\" (click)=\"fileInput.click()\">ALLEGA I TUOI FILE</span></div></div><div class=\"upload-box-list\" ng2FileDrop class=\"upload-file\" (fileOver)=\"fileOverBase($event)\" (dragover)=\"fileOverBox = true;\" *ngIf=\"uploader.queue.length > 0\"><div class=\"container-table\"><table class=\"table-file\"><tr *ngFor=\"let item of uploader.queue, let i = index\"><td nowrap=\"nowrap\" class=\"ico-comuni-search view-file\" (click)=\"iconFn(i)\"></td><td class=\"label-file\">{{ item?.file?.name }}</td><td nowrap=\"nowrap\" class=\"ico-comuni-chiudi remove-file\" (click)=\"item.remove(removeFile(i))\"></td></tr></table></div><div class=\"container-allega\"><table class=\"table-file\"><tr><td *ngIf=\"typeUpload === 'multiple'\" nowrap=\"nowrap\" class=\"icomoon-Simboli_Risorsa-25 plus-icon\" (click)=\"fileInputMultiple.click()\"></td><td *ngIf=\"typeUpload === 'single'\" nowrap=\"nowrap\" class=\"icomoon-Simboli_Risorsa-25 plus-icon\" (click)=\"fileInput.click()\"></td><td *ngIf=\"typeUpload === 'multiple'\" class=\"label-allega\" (click)=\"fileInputMultiple.click()\">ALLEGA I TUOI FILE</td><td *ngIf=\"typeUpload === 'single'\" class=\"label-allega\" (click)=\"fileInput.click()\">ALLEGA I TUOI FILE</td><td nowrap=\"nowrap\" class=\"label-trascina\">Oppure trascina qui</td></tr></table></div></div><div class=\"drag-upload-file\" [ngClass]=\"{'dragover-upload-file': fileOverBox}\" (dragleave)=\"fileOverBox = false;\" (onFileDrop)=\"fileDropFn($event)\" ng2FileDrop [uploader]=\"uploader\">Rilascia qui il tuo documento.</div><div class=\"drag-upload-file-second second-label\" [ngClass]=\"{'dragover-upload-file': fileOverBox}\" (dragleave)=\"fileOverBox = false;\" (onFileDrop)=\"fileDropFn($event)\" ng2FileDrop [uploader]=\"uploader\">La vedrai comparire nel box<br>se l'operazione andrà a buon fine.</div></li><input style=\"visibility: hidden; height: 0px;\" type=\"file\" #fileInput ng2FileSelect [uploader]=\"uploader\" (change)=\"changeListener($event)\" accept=\"{{typeFile}}\"> <input style=\"visibility: hidden; height: 0px;\" type=\"file\" ng2FileSelect #fileInputMultiple [uploader]=\"uploader\" (change)=\"changeListener($event)\" accept=\"{{typeFile}}\" multiple=\"multiple\"></div>",
        styles: [".container-upload-file{width:69%;margin:auto}.upload-file{width:100%;height:11.563em;background-color:#fff;border:1px dashed #6f6f6f;padding:1.25em;z-index:5;opacity:1;display:block;position:absolute;top:0;left:0}.upload-file-over{background-color:#258900}.container-label-trascina{line-height:1}.label-trascina{font-family:Arial,Helvetica,sans-serif;font-weight:400;font-size:.75em;color:#6f6f6f}.label-allega{font-family:Arial,Helvetica,sans-serif;font-weight:700;font-size:.75em;color:#258900;cursor:pointer}.container-icon-aggiungi{padding-top:1.05em;padding-bottom:1.25em;display:inline-block}.icon-aggiungi{font-size:2.875em;color:#258900;border-radius:100%;box-shadow:0 0 1.25em 3px #323232;width:.899em;height:.899em;cursor:pointer}.icomoon-Documenti_37:before{position:relative;top:-.295em;left:-.06em}.drag-upload-file{width:100%;height:11.563em;background-color:#fff;border:1px solid #258900;padding:3.95em;background:#258900;color:#fff;position:absolute;top:0;left:0;z-index:0;opacity:0}.drag-upload-file-second{color:#fff;position:absolute;padding:5.95em;top:0;left:0;z-index:0;opacity:0}.dragover-upload-file{z-index:100;opacity:.9}.second-label{font-size:.875em}.panel-box{margin:.312em;padding:0;display:inline-block;clear:none;width:100%;height:11.563em;position:relative}.table-file{width:100%}.view-file{color:#258900;font-size:1.25em;top:.187em;position:relative;float:left}.remove-file{color:#258900;font-size:.938em;top:-.1em;position:relative;cursor:pointer;float:right}.label-file{font-size:.875em;font-family:Arial,Helvetica,sans-serif;color:#323232}.container-table{height:7.22em;overflow:auto}.container-allega{height:3.125em;border-top:1px solid #ccc;padding-top:.625em}.container-allega .label-allega{font-size:1em}.container-allega .label-trascina{font-size:1em}.plus-icon{font-size:1.563em;color:#258900;cursor:pointer} /*# sourceMappingURL=nbp-upload-file.component.css.map */ "]
    }),
    __metadata("design:paramtypes", [])
], NbpUploadFileComponent);
export { NbpUploadFileComponent };
