var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, TemplateRef, Output, EventEmitter } from '@angular/core';
import { NgbDate } from './ngb-date';
import { NgbDatepickerI18n } from './datepicker-i18n';
var NgbDatepickerRoutingView = (function () {
    function NgbDatepickerRoutingView(i18n) {
        this.i18n = i18n;
        this.select = new EventEmitter();
        this.changeTemplate = new EventEmitter();
    }
    NgbDatepickerRoutingView.prototype.ngOnInit = function () {
        // alert("in select in routing : " + this.startDateEnabled)
        // alert("in select in routing : " + this.endDateEnabled)
    };
    NgbDatepickerRoutingView.prototype.doSelect = function (day) {
        if (!this.abilitaGiorni(day.date))
            return;
        if (this.dataTemplate.valid) {
            // il day si prende quello selezionato e non quello del dataTemplate
            // day.date.day = this.dataTemplate.day;
            day.date.month = this.dataTemplate.month;
            day.date.year = this.dataTemplate.year;
            this.select.emit(NgbDate.from(day.date));
        }
        else {
            if (!day.context.disabled && !this.isHidden(day)) {
                this.select.emit(NgbDate.from(day.date));
            }
        }
    };
    NgbDatepickerRoutingView.prototype.abilitaGiorni = function (data) {
        var buffer = new Date(data.year, data.month - 1, data.day);
        var startDate = new Date(this.startDateEnabled.year, this.startDateEnabled.month - 1, this.startDateEnabled.day);
        var endDate = new Date(this.endDateEnabled.year, this.endDateEnabled.month - 1, this.endDateEnabled.day);
        if (startDate <= buffer && buffer <= endDate) {
            return true;
        }
        return false;
    };
    NgbDatepickerRoutingView.prototype.abilitaMesi = function (data) {
        if ((this.startDateEnabled.month <= data.number && data.number <= this.endDateEnabled.month) && (this.startDateEnabled.year <= this.dataTemplate.year && this.dataTemplate.year <= this.endDateEnabled.year)) {
            return true;
        }
        return false;
    };
    NgbDatepickerRoutingView.prototype.abilitaAnni = function (data) {
        if (this.startDateEnabled.year <= data.number && data.number <= this.endDateEnabled.year) {
            return true;
        }
        return false;
    };
    NgbDatepickerRoutingView.prototype.doSelectMonth = function (mese) {
        if (!this.abilitaMesi(mese))
            return;
        this.currentTemplate = 0;
        this.dataTemplate.template = this.currentTemplate;
        // reset giorni
        this.month.weeks.forEach(function (week) { week.days.forEach(function (day) { day.context.selected = false; }); });
        this.mesi.forEach(function (row) { row.forEach(function (mese) { mese.selected = false; }); });
        this.dataTemplate.month = mese.number;
        this.dataTemplate.valid = true;
        this.changeTemplate.emit(this.dataTemplate);
    };
    NgbDatepickerRoutingView.prototype.doSelectYear = function (year) {
        if (!this.abilitaAnni(year))
            return;
        this.currentTemplate = 1;
        this.dataTemplate.template = this.currentTemplate;
        // resetta mesi e anno
        this.mesi.forEach(function (row) { row.forEach(function (mese) { mese.selected = false; }); });
        this.years.forEach(function (row) { row.forEach(function (year) { year.selected = false; }); });
        this.dataTemplate.year = year.number;
        this.dataTemplate.valid = true;
        this.changeTemplate.emit(this.dataTemplate);
    };
    NgbDatepickerRoutingView.prototype.isCollapsed = function (week) {
        return this.outsideDays === 'collapsed' && week.days[0].date.month !== this.month.number &&
            week.days[week.days.length - 1].date.month !== this.month.number;
    };
    NgbDatepickerRoutingView.prototype.isHidden = function (day) {
        return (this.outsideDays === 'hidden' || this.outsideDays === 'collapsed') && this.month.number !== day.date.month;
    };
    return NgbDatepickerRoutingView;
}());
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], NgbDatepickerRoutingView.prototype, "dayTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], NgbDatepickerRoutingView.prototype, "monthTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], NgbDatepickerRoutingView.prototype, "yearsTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NgbDatepickerRoutingView.prototype, "currentTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "mesi", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "years", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "date", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "dataTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "month", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgbDatepickerRoutingView.prototype, "outsideDays", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "showWeekdays", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "showWeekNumbers", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "startDateEnabled", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "endDateEnabled", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "select", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NgbDatepickerRoutingView.prototype, "changeTemplate", void 0);
NgbDatepickerRoutingView = __decorate([
    Component({
        selector: 'ngb-datepicker-routing-view',
        host: { 'class': 'd-block' },
        template: "<div [ngSwitch]=\"currentTemplate\"><div *ngSwitchCase=\"0\"><div *ngIf=\"showWeekdays\" class=\"ngb-dp-week d-flex\"><div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday\"></div><div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small text-center text-info font-italic\">{{ i18n.getWeekdayShortName(w) }}</div></div><ng-template ngFor let-week [ngForOf]=\"month.weeks\"><div *ngIf=\"!isCollapsed(week)\" class=\"ngb-dp-week d-flex\"><div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-center font-italic text-muted\">{{ week.number }}</div><div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" [class.disabled]=\"day.context.disabled\" [class.hidden]=\"isHidden(day)\"><ng-template [ngIf]=\"!isHidden(day)\"><div ngbDatepickerDayView [date]=\"day.context.date\" [currentMonth]=\"day.context.currentMonth\" [selected]=\"day.context.selected\" [disabled]=\"day.context.disabled\" [focused]=\"day.context.focused\" [startDateEnabled]=\"startDateEnabled\" [endDateEnabled]=\"endDateEnabled\"></div></ng-template></div></div></ng-template></div><div *ngSwitchCase=\"1\"><div *ngFor=\"let row of mesi\" class=\"d-flex ngb-dp-mese\"><div *ngFor=\"let mese of row\" (click)=\"doSelectMonth(mese)\"><div ngbDatepickerReplyMonthView [mese]=\"mese\" [year]=\"dataTemplate.year\" [selected]=\"mese.selected\" [disabled]=\"mese.disabled\" [focused]=\"mese.focused\" [startDateEnabled]=\"startDateEnabled\" [endDateEnabled]=\"endDateEnabled\"></div></div></div></div><div *ngSwitchCase=\"2\"><div *ngFor=\"let row of years\" class=\"d-flex ngb-dp-mese\"><div *ngFor=\"let year of row\" (click)=\"doSelectYear(year)\"><div ngbDatepickerReplyYearsView [year]=\"year\" [selected]=\"year.selected\" [disabled]=\"year.disabled\" [focused]=\"year.focused\" [startDateEnabled]=\"startDateEnabled\" [endDateEnabled]=\"endDateEnabled\"></div></div></div></div><div *ngSwitchDefault>errore template</div></div>",
        styles: [".ngb-dp-week-number,.ngb-dp-weekday{line-height:35px}.ngb-dp-mese{height:45px!important;cursor:pointer}.ngb-dp-week-number,.ngb-dp-weekday{width:45px!important;height:35px!important}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default} /*# sourceMappingURL=datepicker-routing-view.css.map */ "],
    }),
    __metadata("design:paramtypes", [NgbDatepickerI18n])
], NgbDatepickerRoutingView);
export { NgbDatepickerRoutingView };
