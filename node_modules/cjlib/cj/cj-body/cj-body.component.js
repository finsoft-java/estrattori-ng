var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { Component, Input, Output, EventEmitter, ViewChildren, QueryList, Inject } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { CjContextService } from './../cj-context/cj-context.service';
import { coerceBooleanProperty } from './../../utility/lib-utility';
import { NbpChannel } from './../../nbp/nbp-commons/nbp-commons.enums';
import { CjProgressConfigurationService } from './../cj-progress-configuration/cj-progress-configuration.service';
import { NbpProgressComponent } from './../../nbp/nbp-progress/nbp-progress.component';
import { Observable } from 'rxjs/Observable';
import { Subject } from 'rxjs/Subject';
import 'rxjs/add/observable/fromEvent';
import { NbpViewSettingsService } from './../../nbp/nbp-view-settings/nbp-view-settings.service';
import { DOCUMENT } from '@angular/platform-browser';
var CjBodyComponent = (function () {
    function CjBodyComponent(contextService, route, configurator, nbpViewSettingsService, document) {
        this.contextService = contextService;
        this.route = route;
        this.configurator = configurator;
        this.nbpViewSettingsService = nbpViewSettingsService;
        this.document = document;
        this.onResizeEvent = Observable.fromEvent(window, 'resize');
        this.onburgerMenuToggle = new Subject();
        this._isContrastoOn = false;
        /**
         * Evento lanciato sul click del pulsante "Pagina Precedente"
         */
        this.cjOnPrevPageButtonClicked = new EventEmitter();
        /**
         * Evento lanciato sul click della voce di menù
         */
        this.cjOnMenuItemClicked = new EventEmitter();
        /**
         * Evento emesso quando il contesto applicativo è disponibile.
         * @param {EventEmitter<ICjContext>}  cjOnContextReady
         */
        this.cjOnContextReady = new EventEmitter();
        this._nbpChannel = NbpChannel;
        this._isProgressInsideStickyHeader = false;
        this.progressStream = this.configurator.getProgressConfigurationStream();
        this.receiveContrastoEvent();
        this.receiveFontSizeEvent();
    }
    Object.defineProperty(CjBodyComponent.prototype, "cjShowPrevPageButton", {
        /**
         * Booleano per abilitare il pulsante “Pagina precedente”
         */
        get: function () {
            return this._cjShowPrevPageButton;
        },
        set: function (value) {
            this._cjShowPrevPageButton = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CjBodyComponent.prototype, "disabled", {
        /**
         * Booleano che abilita/disabilita il contenuto ng-content del componente.
         * Header e footer sono sempre abilitati.
         * Attributo "disabled" standard di HTML element
         */
        get: function () { return this._cjDisabled; },
        set: function (value) { this._cjDisabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    CjBodyComponent.prototype.receiveContrastoEvent = function () {
        var _this = this;
        this.nbpViewSettingsService.getContrastoEventStream()
            .subscribe(function (isContrastoOn) { return _this._isContrastoOn = isContrastoOn; });
    };
    CjBodyComponent.prototype.receiveFontSizeEvent = function () {
        var _this = this;
        this.nbpViewSettingsService.getFontSizeEventStream()
            .subscribe(function (fontSize) { return _this.document.body.style.fontSize = fontSize; });
    };
    CjBodyComponent.prototype.ngOnInit = function () {
        this._getCjContextFromToken();
        this.cjChannel = this.cjChannel ? this.cjChannel : NbpChannel.ABC;
    };
    // private onBurgerResize: Observable<any>;
    CjBodyComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this._setBodyContainerHeight();
        this.onResizeEvent.forEach(function (evt) { return _this._setBodyContainerHeight(); });
        // TODO Serve ancora?? .. eliminare anche ViewChildren
        this.progressChildren.changes.subscribe(function () {
            setTimeout(function () {
                _this._setBodyContainerHeight();
            });
        });
    };
    CjBodyComponent.prototype.ngAfterViewChecked = function () {
        this._setBodyContainerHeight();
    };
    CjBodyComponent.prototype.setNavigationHeaderSlim = function (isNavigationHeaderSlim) {
        this._isNavigationHeaderSlim = isNavigationHeaderSlim;
    };
    CjBodyComponent.prototype._getCjContextFromToken = function () {
        var _this = this;
        if (!this.cjToken) {
            if (this.cjTokenNameParam) {
                this.sub = this.route.params.subscribe(function (params) {
                    _this.cjToken = params[_this.cjTokenNameParam];
                    _this._obtainContext();
                });
            }
            else {
                console.log('WARNING - Componente CjBody - senza cjToken e senza cjTokenNameParam.');
            }
        }
        else {
            this._obtainContext();
        }
    };
    CjBodyComponent.prototype._obtainContext = function () {
        var _this = this;
        this.contextService.getCjContextByToken(this.cjToken).subscribe(function (context) {
            _this._contextInfo = context;
            _this.contextService.setCurrentCjContext(_this._contextInfo);
            /**
             * se cjApplicationName non presente è popolato con i dato preso dal cjContext
             */
            if (!_this.cjApplicationName) {
                _this.cjApplicationName = _this._contextInfo.application;
            }
            _this.cjOnContextReady.emit(_this._contextInfo);
        });
    };
    CjBodyComponent.prototype._onPrevPageButtonClicked = function () {
        this.cjOnPrevPageButtonClicked.emit('cjOnPrevPageButtonClickedEvent');
    };
    CjBodyComponent.prototype._setBodyContainerHeight = function () {
        var stickyContainerElement = document.getElementsByClassName('sticky-default').item(0);
        /*selection of header element container without nbpBurgerMenu element*/
        var headerElement = document.querySelector('nbp-header > div > div');
        var nbpNavigationHeaderElement = document.querySelector('nbp-navigation-header > div');
        var nbpProgressElement = document.querySelector('nbp-progress > .nbp-progress-container.sticky ');
        var cjbodyHeaderHeight;
        /*cjBodyHeader heightCalculation */
        var headerHeight = !!headerElement ? headerElement.clientHeight : 0;
        var navigationHeaderHeight = !!nbpNavigationHeaderElement ? nbpNavigationHeaderElement.clientHeight : 0;
        var nbpProgressHeight = !!nbpProgressElement ? nbpProgressElement.clientHeight : 0;
        cjbodyHeaderHeight = (headerHeight +
            navigationHeaderHeight +
            nbpProgressHeight); // stickyContainerElement.clientHeight;
        if (!!nbpProgressElement) {
            /*Progress position:fixed top position*/
            nbpProgressElement.style.top = headerHeight + navigationHeaderHeight + 'px';
        }
        var footerElement = document.getElementsByTagName('footer').item(0);
        var footerElementHeight = !!footerElement ? footerElement.clientHeight : 0;
        var viewPortElement = document.documentElement;
        var viewPortHeight = viewPortElement.clientHeight; // or window.innerHeight
        var bodyContainerElement = document.getElementById('body-container');
        if (bodyContainerElement) {
            var bodyContainerCalculedHeight = void 0;
            /* Body container height calculation*/
            bodyContainerCalculedHeight = viewPortHeight - (cjbodyHeaderHeight + footerElementHeight);
            bodyContainerElement.style.top = cjbodyHeaderHeight + 'px';
            bodyContainerElement.style.height = bodyContainerCalculedHeight + 'px';
        }
    };
    CjBodyComponent.prototype._cjChangeRoute = function (menuItem) {
        this.cjOnMenuItemClicked.emit(menuItem);
    };
    return CjBodyComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", String)
], CjBodyComponent.prototype, "cjToken", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CjBodyComponent.prototype, "cjTokenNameParam", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CjBodyComponent.prototype, "cjApplicationName", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CjBodyComponent.prototype, "cjSectionTitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], CjBodyComponent.prototype, "cjChannel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Boolean])
], CjBodyComponent.prototype, "cjShowPrevPageButton", null);
__decorate([
    Input(),
    __metadata("design:type", Object)
], CjBodyComponent.prototype, "cjBurgerMenu", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], CjBodyComponent.prototype, "cjOnPrevPageButtonClicked", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], CjBodyComponent.prototype, "cjOnMenuItemClicked", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Object])
], CjBodyComponent.prototype, "disabled", null);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], CjBodyComponent.prototype, "cjOnContextReady", void 0);
__decorate([
    ViewChildren(NbpProgressComponent),
    __metadata("design:type", QueryList)
], CjBodyComponent.prototype, "progressChildren", void 0);
CjBodyComponent = __decorate([
    Component({
        selector: 'cj-body',template: "<div class=\"sticky-default\"><nbp-header [nbpName]=\"cjApplicationName\" [nbpChannel]=\"cjChannel\" nbpLogo=\"./cjlib/assets/images/sprite.png\" nbpDisableSticky><nbp-customer-name [nbpCustomer]=\"_contextInfo?.cliente.intestazione\"></nbp-customer-name><nbp-burger-menu *ngIf=\"(cjChannel !== _nbpChannel.ABC) && !!cjBurgerMenu\" [nbpMenu]=\"cjBurgerMenu\" (nbpOnItemClick)=\"_cjChangeRoute($event)\"></nbp-burger-menu></nbp-header><nbp-navigation-header [ngClass]=\"{'nav-header-slim': _isProgressInsideStickyHeader}\" [nbpTitle]=\"cjApplicationName\" [nbpSectionTitle]=\"cjSectionTitle\" [nbpShowPrevPage]=\"cjShowPrevPageButton\" (nbpPrevPage)=\"_onPrevPageButtonClicked()\" nbpDisableSticky></nbp-navigation-header></div><div id=\"body-container\" class=\"container-fluid\" [ngClass]=\"{'other-header' : cjChannel !== _nbpChannel.ABC, 'abc-header' : cjChannel === _nbpChannel.ABC}\"><div id=\"body-content\"><ng-content></ng-content></div></div><nbp-footer></nbp-footer>",
        styles: [".navigation-header-container{margin-right:-40px;margin-left:-40px}.sticky-default{position:fixed!important;left:0!important;right:0!important;z-index:1030!important}#body-container.other-header ::ng-deep cj-wizard .sidebar-button__layout{top:80px!important}.internal-scrolling{position:relative;overflow:auto;padding:0 5px 60px}#body-container.other-header{position:relative;overflow:auto;padding:0 5px 60px;width:100%;margin:0!important}#body-container.abc-header{position:relative;overflow:auto;padding:0 5px 60px;width:100%;margin:0!important}#body-container ::ng-deep cj-wizard .sidebar-button__layout.menu-opened{top:calc(80px + 22em)!important} /*# sourceMappingURL=cj-body.component.css.map */ "],
        host: {
            '[class.contrasto-on]': '_isContrastoOn'
        }
    }),
    __param(4, Inject(DOCUMENT)),
    __metadata("design:paramtypes", [CjContextService, ActivatedRoute,
        CjProgressConfigurationService, NbpViewSettingsService, Object])
], CjBodyComponent);
export { CjBodyComponent };
