var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
var NbpSliderRangeComponent = (function () {
    function NbpSliderRangeComponent() {
        /**
         * Default Options
         */
        this.defaultOpts = {
            min: 0,
            max: 100,
            label: {
                range: 10,
                format: '$9'
            },
        };
        this.openedFilter = false;
        this.sliderModel = new FormControl();
        this.options = {};
        this.options = Object.assign({}, this.defaultOpts);
    }
    NbpSliderRangeComponent.prototype.ngOnInit = function () {
        this.min = (new Date(this.startDate.year, this.startDate.month, this.startDate.day)).getTime();
        this.max = (new Date(this.endDate.year, this.endDate.month, this.endDate.day)).getTime();
        this.sliderModel.setValue(this.model.value);
        this.changeSelectDate1(new Date(this.model.value[0]));
        this.changeSelectDate2(new Date(this.model.value[1]));
    };
    NbpSliderRangeComponent.prototype.ngOnChanges = function () {
        /* Detect Input() Changes */
        /* Initial Slider */
    };
    NbpSliderRangeComponent.prototype.changeSelectDate1 = function (data) {
        this.modelDate1 = data;
    };
    NbpSliderRangeComponent.prototype.changeSelectDate2 = function (data) {
        this.modelDate2 = data;
    };
    NbpSliderRangeComponent.prototype.setPoints = function () {
        if (this.modelDate1 && this.modelDate2) {
            this.model = new FormControl([
                (new Date(this.modelDate1.year, this.modelDate1.month - 1, this.modelDate1.day)).getTime(),
                (new Date(this.modelDate2.year, this.modelDate2.month - 1, this.modelDate2.day)).getTime(),
            ]);
            this.sliderModel.setValue(this.model.value);
        }
    };
    NbpSliderRangeComponent.prototype.convertDateFormat = function (date) {
        var newDate = {};
        if (!date) {
            return undefined;
        }
        if (date && date.day && date.month && date.year) {
            newDate.day = date.day;
            newDate.month = String(Number(date.month) + 1);
            newDate.year = date.year;
            return newDate;
        }
        else {
            newDate.day = date.getDate();
            newDate.month = date.getMonth();
            newDate.year = date.getFullYear();
        }
    };
    NbpSliderRangeComponent.prototype.wrongDateOrder = function (valueSelectDate1, valueSelectDate2) {
        if (!valueSelectDate1 || !valueSelectDate2) {
            return true;
        }
        var date1 = new Date(valueSelectDate1.year, valueSelectDate1.month, valueSelectDate1.day);
        var date2 = new Date(valueSelectDate2.year, valueSelectDate2.month, valueSelectDate2.day);
        return date2 < date1;
    };
    return NbpSliderRangeComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", Object)
], NbpSliderRangeComponent.prototype, "model", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NbpSliderRangeComponent.prototype, "startDate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NbpSliderRangeComponent.prototype, "endDate", void 0);
NbpSliderRangeComponent = __decorate([
    Component({
        selector: 'nbp-slider-range',
        template: "<div style=\"width:100%\"><div class=\"nbp-slider-range-component\"><nbp-slider-range-bar [min]=\"min\" [max]=\"max\" [opts]=\"options\" [model]=\"sliderModel\"></nbp-slider-range-bar><nbp-slider-range-picker [min]=\"min\" [max]=\"max\" [opts]=\"options\" [model]=\"sliderModel\" [sModel]=\"model\"></nbp-slider-range-picker></div><div class=\"icona icona-pointer icomoon-Tempo_orologio2\" (click)=\"openedFilter = !openedFilter\"></div><div style=\"clear: both;\"></div><div class=\"row\"><div *ngIf=\"openedFilter\" class=\"col-md-24 col-sm-24 col-xs-24\" style=\"position: absolute; margin-top:14px; z-index:100\"><div style=\"text-align:right\"><div class=\"row arrow-filter\" style=\"margin-bottom:-7px; z-index: 1; margin-right:4%\"></div><div class=\"row filter-panel\" style=\"z-index: 0;\"><div class=\"text-center\" style=\"padding-left:30px; padding-right:30px; margin-bottom:20px\"><div class=\"row info-filter mrg-b-20\"><div class=\"row mrg-t-20 mrg-b-10\" style=\"font-weight: 600\"><div style=\"width:96%; float: left;\">SELEZIONA IL PERIODO</div><div style=\"width:4%; color:green;float: right; text-align: right\"><span class=\"glyphicon icon icona-pointer icomoon-Simboli_Risorsa-20\" (click)=\"openedFilter=!openedFilter\"></span></div></div><div style=\"text-align:left\">La data inizio e la data fine possono coprire un periodo temporale di al massimo 18 mesi</div><div style=\"text-align:left\">La data massima non può superare la data odierna. Il periodo minimo selezionabile è di 15 giorni</div></div><div class=\"row\" style=\"color:rgb(50, 50, 50);\"><form #dataInputForm=\"ngForm\"><div class=\"col col-md-9 col-sm-9\"><nbp-input-container [nbpLabel]=\"'Data inizio periodo*'\"><nbp-calendar-generic name=\"inputData1\" [(ngModel)]=\"valueSelectDate1\" (ngModelChange)=\"changeSelectDate1($event)\" validateDate nbpShowValidation=\"true\" [startDateEnabled]=\"convertDateFormat(startDate)\" [endDateEnabled]=\"convertDateFormat(endDate)\"></nbp-calendar-generic></nbp-input-container></div><div class=\"col col-md-2 col-sm-1 col-xs-1\"></div><div class=\"col col-md-9 col-sm-9\"><nbp-input-container [nbpLabel]=\"'Data fine periodo*'\"><nbp-calendar-generic name=\"inputData2\" [(ngModel)]=\"valueSelectDate2\" (ngModelChange)=\"changeSelectDate2($event)\" validateDate nbpShowValidation=\"true\" [startDateEnabled]=\"convertDateFormat(startDate)\" [endDateEnabled]=\"convertDateFormat(endDate)\"></nbp-calendar-generic></nbp-input-container></div></form></div><div class=\"centerButton\"><nbp-button [nbpLabel]=\"'Applica'\" [nbpStyle]=\"0\" [disabled]=\"this.dataInputForm.invalid || !valueSelectDate1 || !valueSelectDate2 || wrongDateOrder(valueSelectDate1, valueSelectDate2)\" (nbpClick)=\"setPoints()\"></nbp-button></div></div></div></div></div></div></div>",
        styles: [":host /deep/ *{box-sizing:border-box}.nbp-slider-range-component{position:relative;padding:0;font-family:Arial Regular,Sans-Serif;font-size:12px;float:left;width:93%}.centerButton{display:inline-block}.icona{float:right;width:5%;position:relative}.icona:before{font-family:icomoon!important;font-style:normal!important;font-weight:400!important;font-variant:normal!important;text-transform:none!important;line-height:0;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:35px;background-color:#fff;border-radius:35px;margin-left:-8px;margin-top:30px;cursor:pointer;color:#258900}.icona-pointer{cursor:pointer}.success-container-open{width:35px;height:35px;cursor:pointer;position:absolute;margin-left:-40px;margin-top:-2px;background-color:#fff;color:#258900}.hover:hover .success-container-close .success-icon.on-hover{display:inline}.hover:hover .success-container-close .success-icon{display:none}.mrg-t-20{margin-top:20px}.mrg-b--10{margin-bottom:-10px}.info-filter{color:#323232}.success-container-close{width:35px;height:35px;cursor:pointer;position:absolute;margin-left:-40px;margin-top:-2px;background-color:#fff;color:#258900}.success-container-close:hover .success-icon.on-hover{display:inline}.success-container-close:hover .success-icon{display:none}.success-container-close .success-icon.on-hover{display:none}.icon-valori-filtri-settati{width:35px;height:35px;cursor:pointer;border-radius:25px;position:relative;background-color:#fff;color:#258900;border:1px solid #258900}.icon-valori-filtri-settati:hover{background-color:#258900;color:#fff}.container-filtrisettati{width:35px;height:35px;cursor:pointer;border-radius:25px;position:absolute;background-color:#fff;color:#258900;border:1px solid #258900}.container-filtrisettati:hover{background-color:#258900;color:#fff}.arrow-filter{display:inline-block;position:relative;width:0;height:0;border-left:12px solid transparent;border-right:12px solid transparent;border-bottom:12px solid #ccc;margin-right:122px}.arrow-filter::before{content:'';position:absolute;top:2px;width:0;height:0;border-left:11px solid transparent;border-right:11px solid transparent;border-bottom:11px solid #f2f2f2;left:-10.5px}.success-icon{width:35px;height:35px;font-size:35px;cursor:pointer;position:absolute;top:-15%;left:-1%}.success-icon-gomma{width:20px;height:20px;font-size:20px;cursor:pointer;position:absolute;top:12%;left:20%}.cancella-filtri{font-family:'Arial Bold',Arial;font-weight:700;font-size:.75em;color:#258900;text-align:left;font-size:11px;cursor:pointer;padding:0;border:0;margin:0}.centraCercaFiltra{margin-top:-1px}.cercaFiltra1{font-family:'Arial Bold',Arial;font-weight:700;font-size:.75em;color:#258900;width:70px;text-align:left;cursor:pointer;padding:0;border:0;margin:0;margin-left:6px}.cercaFiltra2{font-family:'Arial Bold',Arial;font-weight:700;font-size:.75em;color:#258900;width:70px;text-align:left;cursor:pointer;padding:0;border:0;margin:0;margin-top:-2px;margin-left:6px}.ricercaEffettuata{font-family:'Arial Bold',Arial;font-weight:700;font-size:.75em;color:#258900;width:800px;text-align:left;font-size:11px;cursor:pointer;padding:0;border:0;margin:0}.hoverCancellaFiltri:hover>.icon-valori-filtri-settati{background-color:#258900;color:#fff}.filter-panel{background-color:#f2f2f2;color:#fff;width:100%;border:.5px solid #ccc}.button-group-filter{margin-top:20px;margin-bottom:20px}.gomma{font-size:2.5em;vertical-align:middle;color:green;background-color:transparent}.gomma_txt{margin-top:.75em;margin:0;padding:0;text-align:left;vertical-align:middle;color:#258900;font-size:.75em;font-weight:700;text-transform:uppercase}:host-context(.contrasto-on) .success-container-open{background-color:#fff;color:#000}:host-context(.contrasto-on) .success-container-close{background-color:#fff;color:#000}:host-context(.contrasto-on) .success-container-close:hover{background-color:#fff;color:#000}:host-context(.contrasto-on) .icon-valori-filtri-settati{background-color:#fff;color:#000;border:1px solid #000}:host-context(.contrasto-on) .icon-valori-filtri-settati:hover{background-color:#000;color:#fff}:host-context(.contrasto-on) .container-filtrisettati{background-color:#fff;color:#000;border:1px solid #000}:host-context(.contrasto-on) .container-filtrisettati:hover{background-color:#000;color:#fff}:host-context(.contrasto-on) .arrow-filter{border-bottom:12px solid #000}:host-context(.contrasto-on) .arrow-filter::before{border-bottom:11px solid #fff}:host-context(.contrasto-on) .cancella-filtri{color:#000}:host-context(.contrasto-on) .cercaFiltra1{color:#000}:host-context(.contrasto-on) .cercaFiltra2{color:#000}:host-context(.contrasto-on) .ricercaEffettuata{color:#000}:host-context(.contrasto-on) .hoverCancellaFiltri:hover>.icon-valori-filtri-settati{background-color:#000;color:#fff}:host-context(.contrasto-on) .filter-panel{background-color:#fff;color:#000;border:.5px solid #000}:host-context(.contrasto-on) .gomma{color:#000;background-color:transparent}:host-context(.contrasto-on) .gomma_txt{color:#000} /*# sourceMappingURL=nbp-slider-range.component.css.map */ "]
    }),
    __metadata("design:paramtypes", [])
], NbpSliderRangeComponent);
export { NbpSliderRangeComponent };
