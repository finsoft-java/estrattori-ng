var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NG_VALIDATORS, RequiredValidator, Validators } from '@angular/forms';
import { forwardRef, Directive } from '@angular/core';
var ArrayRequiredValidator = ArrayRequiredValidator_1 = (function (_super) {
    __extends(ArrayRequiredValidator, _super);
    function ArrayRequiredValidator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ArrayRequiredValidator.prototype.validate = function (c) {
        return this.required ? Validators.required(c) : null;
    };
    return ArrayRequiredValidator;
}(RequiredValidator));
ArrayRequiredValidator = ArrayRequiredValidator_1 = __decorate([
    Directive({
        selector: 'nbp-combo-multi[required][formControlName],nbp-combo-multi[required][formControl],nbp-combo-multi[required][ngModel]',
        providers: [{
                provide: NG_VALIDATORS,
                useExisting: forwardRef(function () { return ArrayRequiredValidator_1; }),
                multi: true
            }],
        host: { '[attr.required]': 'required ? "" : null' }
    })
], ArrayRequiredValidator);
export { ArrayRequiredValidator };
var ArrayRequiredValidator_1;
