var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { NbpSize } from './../nbp-commons/nbp-commons.enums';
var NbpSequenzialeGenericComponent = (function () {
    function NbpSequenzialeGenericComponent() {
        /**
         * Array di Json degli step.
         *
         * esempio formato:
         * [
         *   { active: true, fillPercent: 25, label: 'step 1', stepDimension: NbpStepDimension.GRANDE },
         *   { active: false, fillPercent: 0, label: 'step 2', stepDimension: NbpStepDimension.GRANDE },
         *   { active: false, fillPercent: 0, label: 'step 3', stepDimension: NbpStepDimension.GRANDE },
         *   { active: false, fillPercent: 0, label: 'step 4', stepDimension: NbpStepDimension.GRANDE }
         * ];
         *
         */
        this.steps = [];
        /**
         * Evento generato al cambio step.
         * Fornisce in output json costituito da :
         * {
         *  step: valore step corrente
         *  disablePrev: stato pulsante Prev
         *  disableNext: stato pulsante Next
         * }
         */
        this.stepEvent = new EventEmitter();
        //dati di output da fornire su event 
        this.pagingSteps = [];
        this.currentStep = 0;
        this.currentPagingStep = 0;
        //variabili locali da non fare nulla
        this.lg = NbpSize.LG;
        this.disablePrev = true;
        this.disableNext = false;
    }
    Object.defineProperty(NbpSequenzialeGenericComponent.prototype, "navigateOperation", {
        /**
         * Operazione di navigazione richiesta.
         *
         * valori ammessi: "NEXT, PREV"
         *
         */
        set: function (value) {
            if (!value)
                return;
            value = value.toUpperCase();
            if (value.indexOf("NEXT") != -1)
                this.Next();
            if (value.indexOf("PREV") != -1)
                this.Prev();
        },
        enumerable: true,
        configurable: true
    });
    NbpSequenzialeGenericComponent.prototype.ngOnInit = function () {
        this.stepperUpdate();
    };
    NbpSequenzialeGenericComponent.prototype.Prev = function () {
        if (this.currentStep <= 0 && this.currentPagingStep <= 0) {
            return;
        }
        var allPagingSteps = this.getAllPagingSteps(this.currentStep);
        if (allPagingSteps.length > 0 && this.currentPagingStep > 0) {
            this.currentPagingStep--;
            this.steps[this.currentStep].fillPercent = this.getFillPercent(this.currentPagingStep, allPagingSteps.length);
        }
        else {
            this.changeStep(this.currentStep, this.currentStep - 1);
        }
        this.manageButtons();
    };
    NbpSequenzialeGenericComponent.prototype.Next = function () {
        var allPagingSteps = this.getAllPagingSteps(this.currentStep);
        if (this.currentStep >= this.steps.length - 1 && this.currentPagingStep >= allPagingSteps.length) {
            this.steps[this.currentStep].fillPercent = 100;
            // this.currentStep++;
            // this.manageButtons();
            this.manageButtons();
            return;
        }
        if (allPagingSteps.length > 0 && this.currentPagingStep < allPagingSteps.length) {
            this.currentPagingStep++;
            this.steps[this.currentStep].fillPercent = this.getFillPercent(this.currentPagingStep, allPagingSteps.length);
            if (this.currentPagingStep == allPagingSteps.length) {
                this.changeStep(this.currentStep, this.currentStep + 1);
            }
        }
        else {
            this.changeStep(this.currentStep, this.currentStep + 1);
        }
        this.manageButtons();
    };
    NbpSequenzialeGenericComponent.prototype.getAllPagingSteps = function (stepIndex) {
        if (this.pagingSteps[stepIndex] && this.pagingSteps[stepIndex].pages) {
            return this.pagingSteps[stepIndex].pages;
        }
        else {
            return [];
        }
    };
    NbpSequenzialeGenericComponent.prototype.getFillPercent = function (pageIndex, pagesLength) {
        return (100 * (pageIndex + 1) / pagesLength);
    };
    NbpSequenzialeGenericComponent.prototype.changeStep = function (oldStep, newStep) {
        if (newStep >= this.steps.length) {
            return;
        }
        this.steps[oldStep].fillPercent = oldStep < newStep ? 100 : 0;
        this.steps[oldStep].active = false;
        this.currentStep = newStep;
        this.steps[newStep].active = true;
        var allPagingStepsNew = this.getAllPagingSteps(newStep);
        if (allPagingStepsNew.length > 0) {
            this.currentPagingStep = 0;
            this.steps[newStep].fillPercent = this.getFillPercent(this.currentPagingStep, allPagingStepsNew.length);
        }
        else {
            this.currentPagingStep = 0;
            this.steps[newStep].fillPercent = 100;
        }
    };
    NbpSequenzialeGenericComponent.prototype.manageButtons = function () {
        var allPagingSteps = this.getAllPagingSteps(this.currentStep);
        // if(this.currentStep >= this.steps.length - 1 && this.currentPagingStep >= allPagingSteps.length - 1) {
        if (this.currentStep >= this.steps.length - 1 && this.steps[this.currentStep].fillPercent == 100) {
            this.disableNext = true;
        }
        else {
            this.disableNext = false;
        }
        if (this.currentStep <= 0 && this.currentPagingStep <= 0) {
            this.disablePrev = true;
        }
        else {
            this.disablePrev = false;
        }
        this.stepperUpdate();
    };
    NbpSequenzialeGenericComponent.prototype.stepperUpdate = function () {
        var result = {
            step: this.currentStep,
            disablePrev: this.disablePrev,
            disableNext: this.disableNext
        };
        this.stepEvent.emit(result);
    };
    return NbpSequenzialeGenericComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", Array)
], NbpSequenzialeGenericComponent.prototype, "steps", void 0);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], NbpSequenzialeGenericComponent.prototype, "navigateOperation", null);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NbpSequenzialeGenericComponent.prototype, "stepEvent", void 0);
NbpSequenzialeGenericComponent = __decorate([
    Component({
        selector: 'nbp-sequenziale-generic',template: "<div style=\"margin-top: -0.8em;\"><nbp-progress [nbpConfiguration]=\"steps\"></nbp-progress></div><div class=\"container main-container\" style=\"margin-top: 1.250em; min-height: 100%\"><div class=\"page-steps-container col-md-24 border-top-white\" *ngIf=\"pagingSteps[currentStep] && pagingSteps[currentStep].pages && pagingSteps[currentStep].pages.length > 0\"><div class=\"container pad-t-12 pad-b-12 pad-l-10 pad-r-10\"><ul class=\"page-steps pull-left\"><ng-container *ngFor=\"let page of pagingSteps[currentStep].pages; let pageIndex= index\"><li class=\"page-step\" *ngIf=\"pageIndex <= currentPagingStep\"><div class=\"col\"><span class=\"page-steps-number\" [ngClass]=\"{'active': pageIndex === currentPagingStep, 'done': pageIndex < currentPagingStep}\">{{pageIndex + 1}}</span><div class=\"row\"><label class=\"page-step-label\" *ngIf=\"pageIndex === currentPagingStep\">{{pagingSteps[currentStep].currentParentLabel}}</label><br><label class=\"page-steps-label\" *ngIf=\"pageIndex === currentPagingStep\">{{page.label}}</label></div></div></li></ng-container></ul><ul class=\"page-steps pull-right\"><ng-container *ngFor=\"let page of pagingSteps[currentStep].pages; let pageIndex = index\"><li class=\"page-step\" *ngIf=\"pageIndex > currentPagingStep\"><span class=\"page-steps-number\">{{pageIndex + 1}}</span></li></ng-container></ul></div></div></div>",
        styles: [".page-steps{list-style:none;padding:0;margin:0;height:2em}.page-steps li{display:inline-block;height:2em;line-height:2em}.page-steps li .row{line-height:0}.page-steps .page-step .col{display:inline-table}.page-steps .page-step .row{display:table-cell}.page-steps .page-steps-number{display:inline-block;border:1px solid #6f6f6f;font-weight:700;color:#6f6f6f;text-align:center;-webkit-border-radius:50%;-moz-border-radius:50%;border-radius:50%;width:2em;height:2em;font-size:.785em;line-height:2em;margin:0 .125em 0 .125em}.page-steps .page-steps-number.active{color:#258900;border:1px solid #258900}.page-steps .page-steps-number.done{color:#fff;background-color:#258900;border-color:#258900}.page-steps .page-step-label{font-weight:400;color:#258900;font-size:.6875em!important;line-height:.5em;text-transform:uppercase;margin-left:.5em;margin-top:.4em}.page-steps .page-steps-label{font-weight:700;color:#258900;font-size:.785em!important;line-height:1em;text-transform:uppercase;margin-left:.5em;margin-top:.1em!important}.page-steps-container{background-color:#fff}@media (min-width:768px){.page-steps .page-steps-label{font-size:.938em}.page-steps .page-steps-number{font-size:.938em}}@-moz-document url-prefix(){.page-steps .page-step .col{display:inline-flex}}@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){.page-steps .page-step .col .row{top:-10px}}:host-context(.contrasto-on) .page-steps .page-steps-number{color:#000}:host-context(.contrasto-on) .page-steps .page-steps-number.active{color:#000;border-color:#000}:host-context(.contrasto-on) .page-steps .page-steps-number.done{color:#fff;background-color:#000;border-color:#000}:host-context(.contrasto-on) .page-steps .page-step-label{color:#000}:host-context(.contrasto-on) .page-steps .page-steps-label{color:#000}:host-context(.contrasto-on) .page-steps-container{background-color:#fff} /*# sourceMappingURL=nbp-sequenziale-generic.component.css.map */ "]
    }),
    __metadata("design:paramtypes", [])
], NbpSequenzialeGenericComponent);
export { NbpSequenzialeGenericComponent };
