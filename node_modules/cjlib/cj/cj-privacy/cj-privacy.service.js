var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Injectable } from '@angular/core';
import { CjPrivacyClientService } from './cj-privacy-client.service';
/**
 * Servizio utilizzato per recuperare le informazioni di contesto
 *
 */
var CjPrivacyService = (function () {
    function CjPrivacyService(cjPrivacyClient) {
        this.cjPrivacyClient = cjPrivacyClient;
    }
    /**
     * Restituisce le informazioni di privacy a partire dall'ndg, chiamando il servizio rest dedicato.
     * @param  string ndg
     * @return ICjPrivacy
     */
    CjPrivacyService.prototype.getPrivacy = function (ndg, abi, unitaOperativa) {
        return this.cjPrivacyClient.getPrivacyByNdg(ndg, abi, unitaOperativa);
    };
    ;
    /**
     * Salva i consensi privacy compilati tramite form.
     * @param  string ndg
     * @return ICjPrivacy
     */
    CjPrivacyService.prototype.savePrivacy = function (data, ndg, abi, unitaOperativa) {
        return this.cjPrivacyClient.savePrivacy(data, ndg, abi, unitaOperativa);
    };
    ;
    /**
     * Stampa i consensi privacy compilati tramite form.
     * @param  string ndg
     * @return any
     */
    CjPrivacyService.prototype.printPrivacy = function (ndg, abi, unitaOperativa, tipoOfferta) {
        console.log('Stampa da service');
        return this.cjPrivacyClient.printPrivacy(ndg, abi, unitaOperativa, tipoOfferta);
    };
    ;
    return CjPrivacyService;
}());
CjPrivacyService = __decorate([
    Injectable(),
    __metadata("design:paramtypes", [CjPrivacyClientService])
], CjPrivacyService);
export { CjPrivacyService };
