import { OnInit, EventEmitter, ElementRef } from '@angular/core';
import { NbpStyle } from './../../nbp/nbp-commons/nbp-commons.enums';
import { INbpAutocompleteDataSource } from './../../nbp/nbp-datasource/nbp-datasource.interfaces';
import { IAutocompleteElementMappings } from './cj-autocomplete.interfaces';
import 'rxjs/add/operator/debounceTime';
export declare class CjAutocompleteComponent<T> implements OnInit {
    private _hostElement;
    _cjOpened: boolean;
    _primary: NbpStyle;
    _data: Array<T>;
    private _inputDataStream;
    _isSearchEmpty: boolean;
    /**
     * nome della combobox
     */
    name: string;
    /**
     * Identificativo univoco per l'autocomplete.
     * Se nessun id è fornito e' auto-generato.
     */
    id: string;
    /**
     * Modello dei dati sul quale saranno bindate le selezioni dalla tendina
     */
    cjModel: string;
    /**
     * Offset del numero di caratteri minimi da digitare per lanciare una ricerca
     * Valore di default: 4
     */
    cjMinCharacterOffset: number;
    /**
     * Tempo di attesa tra l'inserimento dei caratteri e il lancio della ricerca (espresso in ms)
     * Valore di default: 200
     */
    cjDelaySearchTime: number;
    /**
     * Il testo del placeholder.
     */
    placeholder: string;
    _cjDisabled: boolean;
    /**
     * Flag che abilita/disabilita le funzionalità associate all'autocomplete
     */
    disabled: boolean;
    /**
     * proprietà che determina il fatto che la tendina sia aperta o chiusa
     */
    cjOpened: boolean;
    /**
     * (Opzionale) Titolo del box-tendina dell'autocomplete
     */
    cjBoxTitle: string;
    /**
     * Rappresenta la struttura dati contenente i mappings per la visualizzazione
     * delle informazioni nei singoli elementi della ricerca
     */
    cjElementMappings: IAutocompleteElementMappings;
    /**
    * Rappresenta il nome del campo dell'oggetto (dot notation) sul quale filtrare gli elementi della tendina
    */
    cjFilterField: string;
    /**
     * Rappresenta la sorgente dati
     */
    cjDataSource: INbpAutocompleteDataSource<any>;
    /**
    * Evento lanciato alla selezione di uno degli elementi dell'autocomplete
    */
    cjOnSelectElement: EventEmitter<any>;
    _isOpened(): boolean;
    _onFocusEvent(): void;
    _onInputEvent(): void;
    _navigateBoxElements(event: any): void;
    _onSelectElement(item: any): void;
    constructor(_hostElement: ElementRef);
    ngOnInit(): void;
}
