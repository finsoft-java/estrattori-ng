import { OnInit, EventEmitter, AfterViewInit, AfterViewChecked, QueryList } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { CjContextService } from './../cj-context/cj-context.service';
import { ICjContext } from './../cj-context/cj-context.interfaces';
import { NbpChannel } from './../../nbp/nbp-commons/nbp-commons.enums';
import { CjProgressConfigurationService } from './../cj-progress-configuration/cj-progress-configuration.service';
import { INbpMenu, INbpItemMenu } from './../../nbp/nbp-burger-menu/nbp-burger-menu.interfaces';
import { INbpProgressConfiguration } from './../../nbp/nbp-progress/nbp-progress.interfaces';
import { NbpProgressComponent } from './../../nbp/nbp-progress/nbp-progress.component';
import { Observable } from 'rxjs/Observable';
import { Subject } from 'rxjs/Subject';
import 'rxjs/add/observable/fromEvent';
import { NbpViewSettingsService } from './../../nbp/nbp-view-settings/nbp-view-settings.service';
export declare class CjBodyComponent implements OnInit, AfterViewInit, AfterViewChecked {
    private contextService;
    private route;
    configurator: CjProgressConfigurationService;
    private nbpViewSettingsService;
    private document;
    private onResizeEvent;
    onburgerMenuToggle: Subject<{}>;
    progressStream: Observable<INbpProgressConfiguration[]>;
    _isContrastoOn: boolean;
    /**
     * oggetto utilizzato per recuperare il contesto applicativo
     */
    cjToken: string;
    /**
    * stringa utilizzata per recuperare il token dagli url params
    */
    cjTokenNameParam: string;
    /**
     * (Opzionale) titolo applicativo da visualizzare nella sezione di header
     */
    cjApplicationName: string;
    /**
     * (Opzionale) SectionTitle da visualizzare nella sezione di header
     */
    cjSectionTitle: string;
    /**
     * (Opzionale) Canale applicazione da passare all'header
     */
    cjChannel: NbpChannel;
    _cjShowPrevPageButton: boolean;
    /**
     * Booleano per abilitare il pulsante “Pagina precedente”
     */
    cjShowPrevPageButton: boolean;
    /**
     * elenco delle voci di menu'
     * da passare al componente  nbp-burger-menu
     */
    cjBurgerMenu: INbpMenu;
    /**
     * Evento lanciato sul click del pulsante "Pagina Precedente"
     */
    cjOnPrevPageButtonClicked: EventEmitter<string>;
    /**
     * Evento lanciato sul click della voce di menù
     */
    cjOnMenuItemClicked: EventEmitter<INbpItemMenu>;
    private _cjDisabled;
    /**
     * Booleano che abilita/disabilita il contenuto ng-content del componente.
     * Header e footer sono sempre abilitati.
     * Attributo "disabled" standard di HTML element
     */
    disabled: boolean;
    /**
     * Evento emesso quando il contesto applicativo è disponibile.
     * @param {EventEmitter<ICjContext>}  cjOnContextReady
     */
    cjOnContextReady: EventEmitter<ICjContext>;
    progressChildren: QueryList<NbpProgressComponent>;
    private sub;
    _isNavigationHeaderSlim: boolean;
    _nbpChannel: any;
    _contextInfo: ICjContext;
    _isProgressInsideStickyHeader: boolean;
    constructor(contextService: CjContextService, route: ActivatedRoute, configurator: CjProgressConfigurationService, nbpViewSettingsService: NbpViewSettingsService, document: any);
    receiveContrastoEvent(): void;
    receiveFontSizeEvent(): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    setNavigationHeaderSlim(isNavigationHeaderSlim: boolean): void;
    private _getCjContextFromToken();
    private _obtainContext();
    _onPrevPageButtonClicked(): void;
    _setBodyContainerHeight(): void;
    _cjChangeRoute(menuItem: INbpItemMenu): void;
}
