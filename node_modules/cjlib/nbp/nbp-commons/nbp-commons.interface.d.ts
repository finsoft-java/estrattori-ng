import { NbpStyle, NbpLoadingStatus } from './nbp-commons.enums';
import { Observable } from 'rxjs/Observable';
import { NgControl } from '@angular/forms';
import { NbpEmbeddingMessageType } from './nbp-commons.enums';
/**
 * Interfaccia per il componente di input text
 */
export interface INbpInput {
    name: string;
    id: string;
    nbpShowValidation: boolean;
    showErrorLabel?: boolean;
    pattern?: RegExp;
    disabled: boolean;
    placeholder: string;
    nbpRoundBorder?: boolean;
    nbpHighlightedDefault?: boolean;
    nbpFormat?: string;
    nbpIcon?: string;
    nbpErrorMessage: string;
    required: boolean;
    invalid: Observable<boolean>;
    failures: Observable<Array<string>>;
    ngControl: NgControl;
}
/**
 * struttura che identifica il cliente
 */
export interface INbpHeaderCustomer {
    intestazione: string;
    nsg?: string;
    gestore?: string;
}
export interface INbpButton {
    id: string;
    label: string;
    disabled: boolean;
    visible: boolean;
    style: NbpStyle;
    icon?: string;
    tabindex?: number;
}
export interface INbpButtonLib extends INbpButton {
    layout?: string;
}
export interface INbpLoadingStatus {
    id: string;
    status: NbpLoadingStatus;
}
/**
 * Struttura dati contenente le informazioni del cliente da visualizzare
 * info       - nome e cognome del cliente
 * circleInfo - iniziali del cliente da visualizzare nel circoletto in alto della prima sezione
 */
export interface ICustomerInfo {
    info: string;
    circleInfo: string;
}
/**
 * Struttura dati contenente le informazioni selezionate negli step di selezione tipo firma
 */
export interface ISignTypeData {
    firstStepValue: string;
    secondStepValue: string;
}
export interface IModalDialogData {
    id?: string;
    title: string;
    text: string;
    buttons?: Array<INbpButton>;
    onClickFn?: (_: INbpButton) => any;
}
/**
 * Struttura dati degli EMBEDDING eventi generati dai componenti
 */
export interface IEmbeddingEvent {
    type: NbpEmbeddingMessageType;
    body?: any;
}
