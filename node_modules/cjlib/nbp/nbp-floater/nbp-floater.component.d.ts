import { NbpSize } from './../nbp-commons/nbp-commons.enums';
import { IButtonBoxFloaterConfigurator } from './nbp-floater.interfaces';
export declare class NbpFloaterComponent {
    /**
     * Box Principale Floater.
     *
     * Tipo: IBoxFloater è costituito da un array di oggetti Json.
     *
     * Ciascun oggetto Json permette di implementare  un pulsante del paginatore ed è cosi definito:
     *
     * { icon: l'icona visualizzata nel pulsante del Floater,
     *   iconText: testo visualizzato immediatamente sotto l'icona,
     *   tooltip: tooltip pulsante,
     *   scrollTo: Id del codice Html a cui il Floater si muoverà alla digitazione del pulsante,
     *   callbackBefore: funzione chiamata prima del movimento verso l'Id,
     *   callbackAfter: funzione chiamata dopo il movimento verso l'Id
     * };
     *
     * E' il box principale visualizzato dal Floater. Nella visualizzazione si alterna in modalità toggle
     * con il Box Secondario. O appare l'uno o l'altro. Lo switching avviene attraverso la digitazione del
     * pulsante di help oppure le freccie di espansione
     *
     */
    boxPrincipaleContents: IButtonBoxFloaterConfigurator[];
    /**
     * Icona apertura Box Principale
     *
     * Tipo: String.
     *
     * Rappesenta l'icona visualizzata quando il Box Principale è Chiuso
     *
     */
    iconBoxPrincipale: string;
    /**
     * Icona apertura Box Secondario
     *
     * Tipo: String.
     *
     * Rappesenta l'icona visualizzata quando il Box Principale è Chiuso
     *
     */
    iconBoxSecondario: string;
    /**
     * Box secondario Floater
     *
     * Tipo: IBoxFloater è costituito da un array di oggetti Json.
     *
     * Ciascun oggetto Json permette di implementare  un pulsante del paginatore ed è cosi definito:
     *
     * { icon: l'icona visualizzata nel pulsante del Floater,
     *   iconText: testo visualizzato immediatamente sotto l'icona,
     *   tooltip: tooltip pulsante,
     *   scrollTo: Id del codice Html a cui il Floater si muoverà alla digitazione del pulsante,
     *   callbackBefore: funzione chiamata prima del movimento verso l'Id,
     *   callbackAfter: funzione chiamata dopo il movimento verso l'Id
     * };
     *
     * E' il box secondario visualizzato dal Floater in alternativa al Box Principale.
     *
     */
    boxSecondarioContents: IButtonBoxFloaterConfigurator[];
    helpTooltipMessage: String;
    toggleAssistenza: boolean;
    toggleOperazioni: boolean;
    activeTooltip: number;
    helpTooltip: boolean;
    sizeTooltip: NbpSize;
    constructor();
    /**
     * setActiveToolTip
     *
     *  Funzione di selezione del tooltip attivo.
     *  I tooltip sono numerizzati da un ciclo for di visualizzazione
     *  sulla base della posizione nell'array del loro pulsante di attivazione.
     *  Questa funzione riceve in input il numero del tooltip e lo setta come attivo
     */
    setActiveTooltip(numberTooltip?: number): void;
    /**
     * selectTooltipClassMouseOver
     *
     * ritorna valore boolean connesso al mouse over del tooltip
     *
     */
    selectTooltipClassMouseOver(p: any): boolean;
}
