var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Output, ContentChildren, EventEmitter, QueryList } from '@angular/core';
import { NbpToggleTabComponent } from './nbp-toggle-tab.component';
var NbpToggleTabsetComponent = (function () {
    function NbpToggleTabsetComponent() {
        // @Input() vertical ;
        this.onSelect = new EventEmitter();
    }
    NbpToggleTabsetComponent.prototype.ngAfterContentInit = function () {
        var actives = this.tabs.filter(function (t) { return t.active; });
        if (actives.length > 1) {
            console.error("Multiple active tabs set 'active'");
        }
        else if (!actives.length && this.tabs.length) {
            this.tabs.first.active = true;
        }
    };
    NbpToggleTabsetComponent.prototype.tabClicked = function (tab) {
        this.tabs.forEach(function (element) { return element.active = false; });
        tab.active = true;
        this.onSelect.emit(tab);
    };
    return NbpToggleTabsetComponent;
}());
__decorate([
    Output(),
    __metadata("design:type", Object)
], NbpToggleTabsetComponent.prototype, "onSelect", void 0);
__decorate([
    ContentChildren(NbpToggleTabComponent),
    __metadata("design:type", QueryList)
], NbpToggleTabsetComponent.prototype, "tabs", void 0);
NbpToggleTabsetComponent = __decorate([
    Component({selector: 'nbp-toggle-tabset',
        template: "<div class=\"centre\"><div class=\"tabs-container\"><div *ngFor=\"let tab of tabs; let i = index\" class=\"tab-container\" [class.disabled]=\"tab.disabled\" [class.active]=\"tab.active\" (click)=\"tabClicked(tab)\"><div (click)=\"tabClicked(tab)\" class=\"tab-title\"><span style=\"font-size: 0.750em; font-family: Arial\">{{tab.title}}</span></div></div></div></div><div><ng-content></ng-content></div>",
        styles: [".centre{display:table;margin-left:auto;margin-right:auto}.tabs-container{border-collapse:collapse}.tabs-container .tab-container{display:table-cell;height:3.125em;width:12.5em;text-align:center;background-color:#fff;border:1px solid #ccc;padding:5px;cursor:pointer}.tabs-container .tab-container.active{background-color:#258900;box-shadow:inset 0 2px 3px 0 rgba(0,0,0,.2)}.tabs-container .tab-container.active a{color:#fff}.tabs-container .tab-container.active i{color:#258900}.tabs-container .tab-container.active .tab-title{color:#fff}.tabs-container .tab-container.disabled{pointer-events:none;cursor:not-allowed;opacity:.5}.tabs-container .tab-container i{display:block;font-size:24px;color:#6f6f6f}.tabs-container .tab-container .tab-title{text-transform:uppercase;color:#6f6f6f;display:table-cell;height:2.5em;width:11.875em;font-weight:600;margin:auto;vertical-align:middle}:host-context(.contrasto-on) .tabs-container{display:table;border-collapse:collapse}:host-context(.contrasto-on) .tabs-container .tab-container{border-color:#000;background-color:#fff}:host-context(.contrasto-on) .tabs-container .tab-container.active{background-color:#000;box-shadow:none}:host-context(.contrasto-on) .tabs-container .tab-container.active i{color:#fff}:host-context(.contrasto-on) .tabs-container .tab-container.active .tab-title{color:#fff}:host-context(.contrasto-on) .tabs-container .tab-container i{color:#000}:host-context(.contrasto-on) .tabs-container .tab-container .tab-title{color:#000} /*# sourceMappingURL=nbp-tab-toggle.component.css.map */ "]
    })
], NbpToggleTabsetComponent);
export { NbpToggleTabsetComponent };
