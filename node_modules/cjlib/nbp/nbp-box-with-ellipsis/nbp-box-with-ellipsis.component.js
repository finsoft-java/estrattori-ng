var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, ViewChild, ElementRef, HostListener } from '@angular/core';
var NbpBoxWithEllipsisComponent = (function () {
    function NbpBoxWithEllipsisComponent() {
        this.isTooltipEllipsisVisible = false;
    }
    NbpBoxWithEllipsisComponent.prototype.onWindowsResize = function () {
        this.setTooltipEllipsisVisibility();
    };
    NbpBoxWithEllipsisComponent.prototype.ngOnChanges = function () {
        this.setTooltipEllipsisVisibility();
    };
    NbpBoxWithEllipsisComponent.prototype.ngAfterViewInit = function () {
        this.setTooltipEllipsisVisibility();
    };
    NbpBoxWithEllipsisComponent.prototype.setTooltipEllipsisVisibility = function () {
        var _this = this;
        setTimeout(function () {
            _this.isTooltipEllipsisVisible = _this.boxHtmlContainer.nativeElement.scrollHeight > _this.boxHtmlContainer.nativeElement.offsetHeight;
        });
    };
    return NbpBoxWithEllipsisComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpBoxWithEllipsisComponent.prototype, "nbpInnerHtml", void 0);
__decorate([
    ViewChild('boxHtmlContainer'),
    __metadata("design:type", ElementRef)
], NbpBoxWithEllipsisComponent.prototype, "boxHtmlContainer", void 0);
__decorate([
    HostListener('window:resize'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NbpBoxWithEllipsisComponent.prototype, "onWindowsResize", null);
NbpBoxWithEllipsisComponent = __decorate([
    Component({selector: 'nbp-box-with-ellipsis',
        template: "<div class=\"box-html-container\" #boxHtmlContainer [innerHTML]=\"nbpInnerHtml\"></div><div class=\"tooltip-ellipsis\" *ngIf=\"isTooltipEllipsisVisible\"><nbp-tooltip [nbpTemplate]=\"tooltipTemplate\" [nbpTemplateData]=\"{tooltipData:{text:nbpInnerHtml}}\" [nbpPosition]=\"'Top-Right'\" nbpVisibilityStrategy=\"click\"><span class=\"ellipsis\">...</span></nbp-tooltip><ng-template #tooltipTemplate let-tooltipData=\"tooltipData\"><style>.tooltiptext { padding:20px 5px 0 5px; margin:auto; color:white; background-color:transparent; }   /* p{ color:white; background-color:transparent; } */</style><div class=\"tooltiptext\" [innerHTML]=\"tooltipData.text\"></div></ng-template></div>",
        styles: [":host ::ng-deep p{margin:0!important}.box-html-container{position:relative;width:100%;height:100%;overflow:hidden;display:block}.tooltip-ellipsis{position:absolute;right:0;bottom:0}.tooltip-ellipsis .ellipsis{display:block;color:green;font-size:1em;font-weight:700;padding:0 10px 0 0;background-color:#fff} /*# sourceMappingURL=nbp-box-with-ellipsis.component.css.map */ "]
    }),
    __metadata("design:paramtypes", [])
], NbpBoxWithEllipsisComponent);
export { NbpBoxWithEllipsisComponent };
