var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter } from '@angular/core';
var NbpRadioSelectionComponent = (function () {
    function NbpRadioSelectionComponent() {
        /**
         * Evento emesso al click sui radio button
         * @param {EventEmitter<any>}  nbpOnSelection
         */
        this.nbpOnSelection = new EventEmitter();
    }
    NbpRadioSelectionComponent.prototype.ngOnInit = function () { };
    NbpRadioSelectionComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes.nbpRadioList) {
            this._radioList = this.nbpRadioList.length > 3 ? this.nbpRadioList.slice(0, 3) : this.nbpRadioList.slice();
            this._radioList.filter(function (radioElement) { return radioElement.value === _this.nbpData; });
            if (!this._isNbpDataValid()) {
                this.nbpData = null;
            }
        }
    };
    NbpRadioSelectionComponent.prototype._onSelection = function (value) {
        console.log('nbpRadioSelectionComponent - Emiting: nbpOnSelection', value);
        this.nbpOnSelection.emit(value);
    };
    NbpRadioSelectionComponent.prototype._isNbpDataValid = function () {
        var _this = this;
        return this._radioList.filter(function (radioElement) { return radioElement && radioElement.value === _this.nbpData; }).length > 0;
    };
    return NbpRadioSelectionComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", Array)
], NbpRadioSelectionComponent.prototype, "nbpRadioList", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpRadioSelectionComponent.prototype, "nbpData", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], NbpRadioSelectionComponent.prototype, "nbpOnSelection", void 0);
NbpRadioSelectionComponent = __decorate([
    Component({
        selector: 'nbp-radio-selection',template: "<div class=\"row\"><div *ngFor=\"let elementList of _radioList\" class=\"col-xs-offset-2 col-sm-offset-2 col-md-offset-2\"><div class=\"row\" [hidden]=\"elementList?.hide\"><span *ngIf=\"!!elementList?.icon\" class=\"col-xs-4 col-sm-4 col-md-4 sign-icon\" [ngClass]=\"elementList?.icon\"></span><nbp-radio name=\"offerta\" nbpSelectionSign=\"spunta\" nbpDisplayInline [disabled]=\"elementList?.disabled\" [nbpLabel]=\"elementList?.label\" [value]=\"elementList?.value\" [(ngModel)]=\"nbpData\" (change)=\"_onSelection(elementList.value)\"></nbp-radio></div></div></div>",
        styles: [".sign-icon{font-size:1.9em} /*# sourceMappingURL=nbp-radio-selection.component.css.map */ "]
    }),
    __metadata("design:paramtypes", [])
], NbpRadioSelectionComponent);
export { NbpRadioSelectionComponent };
