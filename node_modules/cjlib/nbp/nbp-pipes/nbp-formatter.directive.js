var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, HostListener, ElementRef, Input, forwardRef } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import { NbpCurrencyPipe } from './nbp-currency.pipe';
import { NbpPipe } from './../nbp-commons/nbp-commons.enums';
var NbpFormatterDirective = NbpFormatterDirective_1 = (function () {
    function NbpFormatterDirective(elementRef, currencyPipe) {
        this.elementRef = elementRef;
        this.currencyPipe = currencyPipe;
        this.initialization = true;
        this.isFormatterSupported = false;
    }
    NbpFormatterDirective.prototype.validate = function (control) {
        if (this.initialization && control.value && this.isFormatterSupported) {
            this.initialization = false;
            this.el.value = this.currencyPipe.transform(control.value);
        }
        return null;
    };
    NbpFormatterDirective.prototype.ngOnInit = function () {
        this.el = this.elementRef.nativeElement;
        if (this.nbpFormatter === NbpPipe.CURRENCY) {
            this.isFormatterSupported = true;
        }
    };
    NbpFormatterDirective.prototype.onFocus = function (value) {
        if (this.isFormatterSupported) {
            this.el.value = this.currencyPipe.parse(value); // opposite of transform
        }
    };
    NbpFormatterDirective.prototype.onBlur = function (value) {
        if (this.isFormatterSupported) {
            this.el.value = this.currencyPipe.transform(value);
        }
    };
    return NbpFormatterDirective;
}());
__decorate([
    Input(),
    __metadata("design:type", Number)
], NbpFormatterDirective.prototype, "nbpFormatter", void 0);
__decorate([
    HostListener('focus', ['$event.target.value']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", void 0)
], NbpFormatterDirective.prototype, "onFocus", null);
__decorate([
    HostListener('blur', ['$event.target.value']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", void 0)
], NbpFormatterDirective.prototype, "onBlur", null);
NbpFormatterDirective = NbpFormatterDirective_1 = __decorate([
    Directive({
        selector: '[nbpFormatter][ngModel]',
        providers: [
            {
                provide: NG_VALIDATORS, useExisting: forwardRef(function () { return NbpFormatterDirective_1; }), multi: true
            }
        ]
    }),
    __metadata("design:paramtypes", [ElementRef,
        NbpCurrencyPipe])
], NbpFormatterDirective);
export { NbpFormatterDirective };
var NbpFormatterDirective_1;
