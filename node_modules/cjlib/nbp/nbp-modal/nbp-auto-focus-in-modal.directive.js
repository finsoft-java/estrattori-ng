var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, EventEmitter, Output } from '@angular/core';
var NbpAutoFocusInModalDirective = (function () {
    function NbpAutoFocusInModalDirective() {
        this.forcedFocusTabChange = new EventEmitter();
    }
    /**
     * evento chiamato dalla modale (nbp-modal) all'apertura per simulare il focus via tab
     * @param event
     */
    NbpAutoFocusInModalDirective.prototype.setTabFocus = function (event) {
        this.forcedFocusTabChange.emit(event);
    };
    return NbpAutoFocusInModalDirective;
}());
__decorate([
    Output('nbpAutoFocusInModal'),
    __metadata("design:type", EventEmitter)
], NbpAutoFocusInModalDirective.prototype, "forcedFocusTabChange", void 0);
NbpAutoFocusInModalDirective = __decorate([
    Directive({
        selector: '[nbpAutoFocusInModal]'
    }),
    __metadata("design:paramtypes", [])
], NbpAutoFocusInModalDirective);
export { NbpAutoFocusInModalDirective };
