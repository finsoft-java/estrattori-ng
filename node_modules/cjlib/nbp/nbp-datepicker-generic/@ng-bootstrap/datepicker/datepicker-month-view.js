var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, TemplateRef, Output, EventEmitter } from '@angular/core';
import { NgbDate } from './ngb-date';
import { NgbDatepickerI18n } from './datepicker-i18n';
var NgbDatepickerMonthView = (function () {
    function NgbDatepickerMonthView(i18n) {
        this.i18n = i18n;
        this.select = new EventEmitter();
    }
    NgbDatepickerMonthView.prototype.doSelect = function (day) {
        if (!day.context.disabled && !this.isHidden(day)) {
            this.select.emit(NgbDate.from(day.date));
        }
    };
    NgbDatepickerMonthView.prototype.isCollapsed = function (week) {
        return this.outsideDays === 'collapsed' && week.days[0].date.month !== this.month.number &&
            week.days[week.days.length - 1].date.month !== this.month.number;
    };
    NgbDatepickerMonthView.prototype.isHidden = function (day) {
        return (this.outsideDays === 'hidden' || this.outsideDays === 'collapsed') && this.month.number !== day.date.month;
    };
    return NgbDatepickerMonthView;
}());
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], NgbDatepickerMonthView.prototype, "dayTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerMonthView.prototype, "month", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NgbDatepickerMonthView.prototype, "outsideDays", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerMonthView.prototype, "showWeekdays", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NgbDatepickerMonthView.prototype, "showWeekNumbers", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NgbDatepickerMonthView.prototype, "select", void 0);
NgbDatepickerMonthView = __decorate([
    Component({
        selector: 'ngb-datepicker-month-view',
        host: { 'class': 'd-block' },
        template: "<div *ngIf=\"showWeekdays\" class=\"ngb-dp-week d-flex\"><div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday\"></div><div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small text-center text-info font-italic\">{{ i18n.getWeekdayShortName(w) }}</div></div><ng-template ngFor let-week [ngForOf]=\"month.weeks\"><div *ngIf=\"!isCollapsed(week)\" class=\"ngb-dp-week d-flex\"><div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-center font-italic text-muted\">{{ week.number }}</div><div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" [class.disabled]=\"day.context.disabled\" [class.hidden]=\"isHidden(day)\"><ng-template [ngIf]=\"!isHidden(day)\"><ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngOutletContext]=\"day.context\"></ng-template></ng-template></div></div></ng-template>",
        styles: [".ngb-dp-week-number,.ngb-dp-weekday{line-height:35px}.ngb-dp-day{width:45px!important;height:45px!important}.ngb-dp-week-number,.ngb-dp-weekday{width:45px!important;height:35px!important}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default} /*# sourceMappingURL=datepicker-month-view.css.map */ "],
    }),
    __metadata("design:paramtypes", [NgbDatepickerI18n])
], NgbDatepickerMonthView);
export { NgbDatepickerMonthView };
