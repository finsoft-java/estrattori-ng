var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter, HostBinding, ViewChild, ElementRef } from '@angular/core';
import { NbpSize } from './../nbp-commons/nbp-commons.enums';
import { coerceBooleanProperty } from './../../utility/lib-utility';
/**
 * Componente per l’inserimento di pulsanti nella pagina. La prima versione del
 * componente conterrà un insieme minimale delle funzionalità, ad esempio sarà possibile
 * utilizzare solo button senza icona.
 *
 */
var NbpButtonGenerationComponent = (function () {
    function NbpButtonGenerationComponent() {
        /**
         * (Opzionale) Nome della classe icona da visualizzare nel pulsante
         */
        this.nbpIcon = 'true';
        /**
         * (Opzionale) Enum, che indica la dimensione dei pulsanti.
         * Proprietà che agisce solo sui pulsanti di tipo SELECT (vedi Style Guide)
         * “LG” | “MD”
         * Valore default : “MD”
         */
        this.nbpSize = NbpSize.LG;
        /**
         * (Opzionale) Enum, che indica la tipologia dei pulsanti.
         * "DEFAULT" | "ROUND" | "DEFAULT_L" | "ROUND_L" | "DEFAULT_R" | "ROUND_R"
         * Valore default : “DEFAULT”
         */
        this.nbpType = "DEFAULT";
        /**
        * Evento emesso al click sul pulsante.
        * @param {EventEmitter<any>}  nbpClick
        */
        this.nbpClick = new EventEmitter();
        this._isSelectButtonChecked = false;
        this.hover = false;
        /**
         * Parametro usato per attivare e disattivare il focus al tab.
         */
        this.focusOn = false;
        /**
         * (Opzionale) Paramentro che indica l'ordine di spostamento da un campo all'altro attraverso il tab.
         */
        this.tabindex = 0;
        this._size = NbpSize;
        this._isSelectButtonSizeLarge = false;
        this.switchType = "DEFAULT";
    }
    Object.defineProperty(NbpButtonGenerationComponent.prototype, "disabled", {
        get: function () { return this._nbpDisabled; },
        set: function (value) { this._nbpDisabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    NbpButtonGenerationComponent.prototype.ngOnInit = function () {
        this.nbpType = this.nbpType.toUpperCase();
        if (this.nbpType != "DEFAULT" && this.nbpType != "ROUND" && this.nbpType != "DEFAULT_L" && this.nbpType != "ROUND_L" && this.nbpType != "DEFAULT_R" && this.nbpType != "ROUND_R")
            this.nbpType = "DEFAULT";
        if (this.nbpType == "ROUND" || this.nbpType == "ROUND_L" || this.nbpType == "ROUND_R")
            this.switchType = "ROUND";
        this.nbpSize = this.nbpSize !== NbpSize.SM ? this.nbpSize : NbpSize.MD;
        if (this.firstFocus) {
            this.focusOn = true;
            this.elementRef.nativeElement.focus(this.focusFn());
        }
    };
    NbpButtonGenerationComponent.prototype.focusFn = function () {
        this.focusOn = true;
    };
    NbpButtonGenerationComponent.prototype._onClickButton = function () {
        this.focusOn = false;
        this.nbpClick.emit();
    };
    NbpButtonGenerationComponent.prototype._tabFocusOn = function () {
        this.focusOn = true;
    };
    NbpButtonGenerationComponent.prototype._tabFocusOff = function () {
        this.focusOn = false;
    };
    NbpButtonGenerationComponent.prototype._shiftTabFocusOn = function () {
        this.focusOn = true;
    };
    NbpButtonGenerationComponent.prototype._shiftTabFocusOff = function () {
        this.focusOn = false;
    };
    return NbpButtonGenerationComponent;
}());
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpButtonGenerationComponent.prototype, "nbpLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpButtonGenerationComponent.prototype, "nbpIcon", void 0);
__decorate([
    HostBinding('class.nbp-global-disable'),
    Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Object])
], NbpButtonGenerationComponent.prototype, "disabled", null);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NbpButtonGenerationComponent.prototype, "nbpSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NbpButtonGenerationComponent.prototype, "nbpType", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], NbpButtonGenerationComponent.prototype, "nbpClick", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NbpButtonGenerationComponent.prototype, "firstFocus", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], NbpButtonGenerationComponent.prototype, "focusOn", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], NbpButtonGenerationComponent.prototype, "tabindex", void 0);
__decorate([
    ViewChild('autoFocusButtonGeneration'),
    __metadata("design:type", ElementRef)
], NbpButtonGenerationComponent.prototype, "elementRef", void 0);
NbpButtonGenerationComponent = __decorate([
    Component({
        selector: 'nbp-button-generation',template: "<button class=\"btn button\" #autoFocusButtonGeneration (click)=\"_onClickButton()\" (focusout)=\"_tabFocusOff()\" (keydown.tab)=\"_tabFocusOff()\" (keyup.tab)=\"_tabFocusOn()\" (keydown.shift.tab)=\"_shiftTabFocusOff()\" (keyup.shift.tab)=\"_shiftTabFocusOn()\" [disabled]=\"disabled\" [tabindex]=\"tabindex\" [ngClass]=\"{ 'default': nbpType == 'DEFAULT', 'default-l': nbpType == 'DEFAULT_L', 'default-r': nbpType == 'DEFAULT_R', 'round':  nbpType == 'ROUND', 'round-l': nbpType == 'ROUND_L', 'round-r': nbpType == 'ROUND_R', 'tabFocusOn': focusOn }\"><ng-container [ngSwitch]=\"switchType\"><ng-container *ngSwitchCase=\"'ROUND'\"><span *ngIf=\"!!nbpIcon\" class=\"icon button-icon-round icomoon-Simboli_Risorsa-24\"></span> <span *ngIf=\"!!nbpIcon\" class=\"icon button-icon-round icomoon-Simboli_Risorsa-25\"></span><span *ngIf=\"!!nbpLabel\" (mouseenter)=\"hover=true\" (mouseleave)=\"hover=false\" [ngClass]=\"{'button-label-icon-round': nbpIcon, 'button-label-round': !nbpIcon}\">{{nbpLabel}}</span></ng-container><ng-container *ngSwitchDefault><span *ngIf=\"!!nbpIcon\" class=\"icon button-icon {{nbpIcon}}\"></span><span *ngIf=\"!!nbpLabel\" [ngClass]=\"{'button-label-icon': nbpIcon, 'button-label': !nbpIcon}\">{{nbpLabel}}</span></ng-container></ng-container></button>",
        styles: [".btn{border-radius:2px!important}.button{font-weight:700;font-size:.75em;padding-top:1em;padding-bottom:1em;line-height:1;outline:0!important;text-transform:uppercase;height:4.167em;min-width:9.167em;box-shadow:none!important}.button.check.tabFocusOn{box-shadow:0 0 .05em .2em rgba(37,137,0,.6)!important}.tabFocusOn{box-shadow:0 0 .05em .2em rgba(37,137,0,.6)!important}.button.default{color:#258900;background-color:#f8f8f8;border-color:#258900;border-radius:3px!important}.button.default:hover:not(.select){color:#fff;background-color:#258900}.button.default-l{color:#258900;background-color:#f8f8f8;border-color:#258900;float:left;margin-left:5px}.button.default-l:hover:not(.select){color:#fff;background-color:#258900}.button.default-r{color:#258900;background-color:#f8f8f8;border-color:#258900;float:right}.button.default-r:hover:not(.select){color:#fff;background-color:#258900}.button-icon{padding-left:.625em;font-size:2em!important;display:table-cell!important;position:relative}.button-label-icon{padding-left:2em;padding-right:2.625em;display:table-cell!important;vertical-align:middle;font:Arial 12 Bold}.icomoon-Simboli_Risorsa-25{display:none!important}.button.round{border:0;color:#258900;background-color:transparent;border-color:#258900;border-radius:3px!important}.button.round:hover .icomoon-Simboli_Risorsa-25{display:table-cell!important;color:#258900}.button.round:hover .icomoon-Simboli_Risorsa-24{display:none!important}.button.round-l{border:0;color:#258900;background-color:transparent;border-color:#258900;float:left;margin-left:5px}.button.round-l:hover .icomoon-Simboli_Risorsa-25{display:table-cell!important;color:#258900}.button.round-l:hover .icomoon-Simboli_Risorsa-24{display:none!important}.button.round-r{border:0;color:#258900;background-color:transparent;border-color:#258900;float:right}.button.round-r:hover .icomoon-Simboli_Risorsa-25{display:table-cell!important;color:#258900}.button.round-r:hover .icomoon-Simboli_Risorsa-24{display:none!important}.button-icon-round{font-size:30px!important;display:table-cell;position:relative;border-color:#258900;color:#323232}.button-icon-round:hover{color:#258900}.button-label-icon-round{padding-left:10px;padding-right:10px;display:table-cell!important;vertical-align:middle;font:Arial 12 Bold}:host-context(.contrasto-on) .button.default,:host-context(.contrasto-on) .button.default-l,:host-context(.contrasto-on) .button.default-r{color:#000;background-color:#fff;border-color:#000}:host-context(.contrasto-on) .button.default-l:hover:not(.select),:host-context(.contrasto-on) .button.default-r:hover:not(.select),:host-context(.contrasto-on) .button.default:hover:not(.select){color:#fff;background-color:#000;border-color:#fff}:host-context(.contrasto-on) .button.round,:host-context(.contrasto-on) .button.round-l,:host-context(.contrasto-on) .button.round-r{color:#000;background-color:#fff;border-color:#000}:host-context(.contrasto-on) .button.round-l:hover,:host-context(.contrasto-on) .button.round-r:hover,:host-context(.contrasto-on) .button.round:hover{color:#000}:host-context(.contrasto-on) .button.round-l:hover .icomoon-Simboli_Risorsa-25,:host-context(.contrasto-on) .button.round-r:hover .icomoon-Simboli_Risorsa-25,:host-context(.contrasto-on) .button.round:hover .icomoon-Simboli_Risorsa-25{color:#000} /*# sourceMappingURL=nbp-button-generation.component.css.map */ "],
    }),
    __metadata("design:paramtypes", [])
], NbpButtonGenerationComponent);
export { NbpButtonGenerationComponent };
